// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dns.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DNSStartReq struct {
	Config               string   `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DNSStartReq) Reset()         { *m = DNSStartReq{} }
func (m *DNSStartReq) String() string { return proto.CompactTextString(m) }
func (*DNSStartReq) ProtoMessage()    {}
func (*DNSStartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{0}
}
func (m *DNSStartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNSStartReq.Unmarshal(m, b)
}
func (m *DNSStartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNSStartReq.Marshal(b, m, deterministic)
}
func (dst *DNSStartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSStartReq.Merge(dst, src)
}
func (m *DNSStartReq) XXX_Size() int {
	return xxx_messageInfo_DNSStartReq.Size(m)
}
func (m *DNSStartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSStartReq.DiscardUnknown(m)
}

var xxx_messageInfo_DNSStartReq proto.InternalMessageInfo

func (m *DNSStartReq) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

type DNSStopReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DNSStopReq) Reset()         { *m = DNSStopReq{} }
func (m *DNSStopReq) String() string { return proto.CompactTextString(m) }
func (*DNSStopReq) ProtoMessage()    {}
func (*DNSStopReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{1}
}
func (m *DNSStopReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNSStopReq.Unmarshal(m, b)
}
func (m *DNSStopReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNSStopReq.Marshal(b, m, deterministic)
}
func (dst *DNSStopReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSStopReq.Merge(dst, src)
}
func (m *DNSStopReq) XXX_Size() int {
	return xxx_messageInfo_DNSStopReq.Size(m)
}
func (m *DNSStopReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSStopReq.DiscardUnknown(m)
}

var xxx_messageInfo_DNSStopReq proto.InternalMessageInfo

type UpdateGlobalConfigReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	LogEnable            bool            `protobuf:"varint,2,opt,name=log_enable,json=logEnable,proto3" json:"log_enable,omitempty"`
	DnssecEnable         bool            `protobuf:"varint,3,opt,name=dnssec_enable,json=dnssecEnable,proto3" json:"dnssec_enable,omitempty"`
	Ttl                  uint32          `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	BlackholeEnable      bool            `protobuf:"varint,5,opt,name=blackhole_enable,json=blackholeEnable,proto3" json:"blackhole_enable,omitempty"`
	Blackholes           []string        `protobuf:"bytes,6,rep,name=blackholes,proto3" json:"blackholes,omitempty"`
	RecursionEnable      bool            `protobuf:"varint,7,opt,name=recursion_enable,json=recursionEnable,proto3" json:"recursion_enable,omitempty"`
	RecursiveClients     uint32          `protobuf:"varint,8,opt,name=recursive_clients,json=recursiveClients,proto3" json:"recursive_clients,omitempty"`
	UpdateModel          string          `protobuf:"bytes,9,opt,name=update_model,json=updateModel,proto3" json:"update_model,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateGlobalConfigReq) Reset()         { *m = UpdateGlobalConfigReq{} }
func (m *UpdateGlobalConfigReq) String() string { return proto.CompactTextString(m) }
func (*UpdateGlobalConfigReq) ProtoMessage()    {}
func (*UpdateGlobalConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{2}
}
func (m *UpdateGlobalConfigReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGlobalConfigReq.Unmarshal(m, b)
}
func (m *UpdateGlobalConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGlobalConfigReq.Marshal(b, m, deterministic)
}
func (dst *UpdateGlobalConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGlobalConfigReq.Merge(dst, src)
}
func (m *UpdateGlobalConfigReq) XXX_Size() int {
	return xxx_messageInfo_UpdateGlobalConfigReq.Size(m)
}
func (m *UpdateGlobalConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGlobalConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGlobalConfigReq proto.InternalMessageInfo

func (m *UpdateGlobalConfigReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UpdateGlobalConfigReq) GetLogEnable() bool {
	if m != nil {
		return m.LogEnable
	}
	return false
}

func (m *UpdateGlobalConfigReq) GetDnssecEnable() bool {
	if m != nil {
		return m.DnssecEnable
	}
	return false
}

func (m *UpdateGlobalConfigReq) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *UpdateGlobalConfigReq) GetBlackholeEnable() bool {
	if m != nil {
		return m.BlackholeEnable
	}
	return false
}

func (m *UpdateGlobalConfigReq) GetBlackholes() []string {
	if m != nil {
		return m.Blackholes
	}
	return nil
}

func (m *UpdateGlobalConfigReq) GetRecursionEnable() bool {
	if m != nil {
		return m.RecursionEnable
	}
	return false
}

func (m *UpdateGlobalConfigReq) GetRecursiveClients() uint32 {
	if m != nil {
		return m.RecursiveClients
	}
	return 0
}

func (m *UpdateGlobalConfigReq) GetUpdateModel() string {
	if m != nil {
		return m.UpdateModel
	}
	return ""
}

type CreateACLReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Ips                  []string        `protobuf:"bytes,4,rep,name=ips,proto3" json:"ips,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateACLReq) Reset()         { *m = CreateACLReq{} }
func (m *CreateACLReq) String() string { return proto.CompactTextString(m) }
func (*CreateACLReq) ProtoMessage()    {}
func (*CreateACLReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{3}
}
func (m *CreateACLReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateACLReq.Unmarshal(m, b)
}
func (m *CreateACLReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateACLReq.Marshal(b, m, deterministic)
}
func (dst *CreateACLReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateACLReq.Merge(dst, src)
}
func (m *CreateACLReq) XXX_Size() int {
	return xxx_messageInfo_CreateACLReq.Size(m)
}
func (m *CreateACLReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateACLReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateACLReq proto.InternalMessageInfo

func (m *CreateACLReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateACLReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateACLReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateACLReq) GetIps() []string {
	if m != nil {
		return m.Ips
	}
	return nil
}

type UpdateACLReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Ips                  []string        `protobuf:"bytes,4,rep,name=ips,proto3" json:"ips,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateACLReq) Reset()         { *m = UpdateACLReq{} }
func (m *UpdateACLReq) String() string { return proto.CompactTextString(m) }
func (*UpdateACLReq) ProtoMessage()    {}
func (*UpdateACLReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{4}
}
func (m *UpdateACLReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateACLReq.Unmarshal(m, b)
}
func (m *UpdateACLReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateACLReq.Marshal(b, m, deterministic)
}
func (dst *UpdateACLReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateACLReq.Merge(dst, src)
}
func (m *UpdateACLReq) XXX_Size() int {
	return xxx_messageInfo_UpdateACLReq.Size(m)
}
func (m *UpdateACLReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateACLReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateACLReq proto.InternalMessageInfo

func (m *UpdateACLReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UpdateACLReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateACLReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateACLReq) GetIps() []string {
	if m != nil {
		return m.Ips
	}
	return nil
}

type DeleteACLReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteACLReq) Reset()         { *m = DeleteACLReq{} }
func (m *DeleteACLReq) String() string { return proto.CompactTextString(m) }
func (*DeleteACLReq) ProtoMessage()    {}
func (*DeleteACLReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{5}
}
func (m *DeleteACLReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteACLReq.Unmarshal(m, b)
}
func (m *DeleteACLReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteACLReq.Marshal(b, m, deterministic)
}
func (dst *DeleteACLReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteACLReq.Merge(dst, src)
}
func (m *DeleteACLReq) XXX_Size() int {
	return xxx_messageInfo_DeleteACLReq.Size(m)
}
func (m *DeleteACLReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteACLReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteACLReq proto.InternalMessageInfo

func (m *DeleteACLReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteACLReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateZoneReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ViewId               string          `protobuf:"bytes,2,opt,name=view_id,json=viewId,proto3" json:"view_id,omitempty"`
	ZoneId               string          `protobuf:"bytes,3,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	ZoneName             string          `protobuf:"bytes,4,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`
	ZoneFileName         string          `protobuf:"bytes,5,opt,name=zone_file_name,json=zoneFileName,proto3" json:"zone_file_name,omitempty"`
	Ttl                  uint32          `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateZoneReq) Reset()         { *m = CreateZoneReq{} }
func (m *CreateZoneReq) String() string { return proto.CompactTextString(m) }
func (*CreateZoneReq) ProtoMessage()    {}
func (*CreateZoneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{6}
}
func (m *CreateZoneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateZoneReq.Unmarshal(m, b)
}
func (m *CreateZoneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateZoneReq.Marshal(b, m, deterministic)
}
func (dst *CreateZoneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateZoneReq.Merge(dst, src)
}
func (m *CreateZoneReq) XXX_Size() int {
	return xxx_messageInfo_CreateZoneReq.Size(m)
}
func (m *CreateZoneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateZoneReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateZoneReq proto.InternalMessageInfo

func (m *CreateZoneReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateZoneReq) GetViewId() string {
	if m != nil {
		return m.ViewId
	}
	return ""
}

func (m *CreateZoneReq) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *CreateZoneReq) GetZoneName() string {
	if m != nil {
		return m.ZoneName
	}
	return ""
}

func (m *CreateZoneReq) GetZoneFileName() string {
	if m != nil {
		return m.ZoneFileName
	}
	return ""
}

func (m *CreateZoneReq) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

type UpdateZoneReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Ttl                  uint32          `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Name                 string          `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ZoneFileName         string          `protobuf:"bytes,5,opt,name=zone_file_name,json=zoneFileName,proto3" json:"zone_file_name,omitempty"`
	View                 string          `protobuf:"bytes,6,opt,name=view,proto3" json:"view,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateZoneReq) Reset()         { *m = UpdateZoneReq{} }
func (m *UpdateZoneReq) String() string { return proto.CompactTextString(m) }
func (*UpdateZoneReq) ProtoMessage()    {}
func (*UpdateZoneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{7}
}
func (m *UpdateZoneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateZoneReq.Unmarshal(m, b)
}
func (m *UpdateZoneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateZoneReq.Marshal(b, m, deterministic)
}
func (dst *UpdateZoneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateZoneReq.Merge(dst, src)
}
func (m *UpdateZoneReq) XXX_Size() int {
	return xxx_messageInfo_UpdateZoneReq.Size(m)
}
func (m *UpdateZoneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateZoneReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateZoneReq proto.InternalMessageInfo

func (m *UpdateZoneReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UpdateZoneReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateZoneReq) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *UpdateZoneReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateZoneReq) GetZoneFileName() string {
	if m != nil {
		return m.ZoneFileName
	}
	return ""
}

func (m *UpdateZoneReq) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

type DeleteZoneReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	View                 string          `protobuf:"bytes,4,opt,name=view,proto3" json:"view,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteZoneReq) Reset()         { *m = DeleteZoneReq{} }
func (m *DeleteZoneReq) String() string { return proto.CompactTextString(m) }
func (*DeleteZoneReq) ProtoMessage()    {}
func (*DeleteZoneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{8}
}
func (m *DeleteZoneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteZoneReq.Unmarshal(m, b)
}
func (m *DeleteZoneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteZoneReq.Marshal(b, m, deterministic)
}
func (dst *DeleteZoneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteZoneReq.Merge(dst, src)
}
func (m *DeleteZoneReq) XXX_Size() int {
	return xxx_messageInfo_DeleteZoneReq.Size(m)
}
func (m *DeleteZoneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteZoneReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteZoneReq proto.InternalMessageInfo

func (m *DeleteZoneReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteZoneReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteZoneReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteZoneReq) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

type CreateRRReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ZoneId               string          `protobuf:"bytes,4,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	ViewId               string          `protobuf:"bytes,5,opt,name=view_id,json=viewId,proto3" json:"view_id,omitempty"`
	DataType             string          `protobuf:"bytes,6,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	RData                string          `protobuf:"bytes,7,opt,name=r_data,json=rData,proto3" json:"r_data,omitempty"`
	Ttl                  uint32          `protobuf:"varint,8,opt,name=ttl,proto3" json:"ttl,omitempty"`
	ViewKey              string          `protobuf:"bytes,9,opt,name=view_key,json=viewKey,proto3" json:"view_key,omitempty"`
	ZoneName             string          `protobuf:"bytes,10,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateRRReq) Reset()         { *m = CreateRRReq{} }
func (m *CreateRRReq) String() string { return proto.CompactTextString(m) }
func (*CreateRRReq) ProtoMessage()    {}
func (*CreateRRReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{9}
}
func (m *CreateRRReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRRReq.Unmarshal(m, b)
}
func (m *CreateRRReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRRReq.Marshal(b, m, deterministic)
}
func (dst *CreateRRReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRRReq.Merge(dst, src)
}
func (m *CreateRRReq) XXX_Size() int {
	return xxx_messageInfo_CreateRRReq.Size(m)
}
func (m *CreateRRReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRRReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRRReq proto.InternalMessageInfo

func (m *CreateRRReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateRRReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateRRReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRRReq) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *CreateRRReq) GetViewId() string {
	if m != nil {
		return m.ViewId
	}
	return ""
}

func (m *CreateRRReq) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *CreateRRReq) GetRData() string {
	if m != nil {
		return m.RData
	}
	return ""
}

func (m *CreateRRReq) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *CreateRRReq) GetViewKey() string {
	if m != nil {
		return m.ViewKey
	}
	return ""
}

func (m *CreateRRReq) GetZoneName() string {
	if m != nil {
		return m.ZoneName
	}
	return ""
}

type UpdateRRReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	DataType             string          `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	RData                string          `protobuf:"bytes,4,opt,name=r_data,json=rData,proto3" json:"r_data,omitempty"`
	Ttl                  uint32          `protobuf:"varint,5,opt,name=ttl,proto3" json:"ttl,omitempty"`
	ViewName             string          `protobuf:"bytes,6,opt,name=view_name,json=viewName,proto3" json:"view_name,omitempty"`
	ViewKey              string          `protobuf:"bytes,7,opt,name=view_key,json=viewKey,proto3" json:"view_key,omitempty"`
	ZoneName             string          `protobuf:"bytes,8,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateRRReq) Reset()         { *m = UpdateRRReq{} }
func (m *UpdateRRReq) String() string { return proto.CompactTextString(m) }
func (*UpdateRRReq) ProtoMessage()    {}
func (*UpdateRRReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{10}
}
func (m *UpdateRRReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRRReq.Unmarshal(m, b)
}
func (m *UpdateRRReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRRReq.Marshal(b, m, deterministic)
}
func (dst *UpdateRRReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRRReq.Merge(dst, src)
}
func (m *UpdateRRReq) XXX_Size() int {
	return xxx_messageInfo_UpdateRRReq.Size(m)
}
func (m *UpdateRRReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRRReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRRReq proto.InternalMessageInfo

func (m *UpdateRRReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UpdateRRReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateRRReq) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *UpdateRRReq) GetRData() string {
	if m != nil {
		return m.RData
	}
	return ""
}

func (m *UpdateRRReq) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *UpdateRRReq) GetViewName() string {
	if m != nil {
		return m.ViewName
	}
	return ""
}

func (m *UpdateRRReq) GetViewKey() string {
	if m != nil {
		return m.ViewKey
	}
	return ""
}

func (m *UpdateRRReq) GetZoneName() string {
	if m != nil {
		return m.ZoneName
	}
	return ""
}

type DeleteRRReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ZoneId               string          `protobuf:"bytes,4,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	DataType             string          `protobuf:"bytes,5,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	RData                string          `protobuf:"bytes,6,opt,name=r_data,json=rData,proto3" json:"r_data,omitempty"`
	Ttl                  uint32          `protobuf:"varint,7,opt,name=ttl,proto3" json:"ttl,omitempty"`
	ViewName             string          `protobuf:"bytes,8,opt,name=view_name,json=viewName,proto3" json:"view_name,omitempty"`
	ViewKey              string          `protobuf:"bytes,9,opt,name=view_key,json=viewKey,proto3" json:"view_key,omitempty"`
	ZoneName             string          `protobuf:"bytes,10,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteRRReq) Reset()         { *m = DeleteRRReq{} }
func (m *DeleteRRReq) String() string { return proto.CompactTextString(m) }
func (*DeleteRRReq) ProtoMessage()    {}
func (*DeleteRRReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{11}
}
func (m *DeleteRRReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRRReq.Unmarshal(m, b)
}
func (m *DeleteRRReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRRReq.Marshal(b, m, deterministic)
}
func (dst *DeleteRRReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRRReq.Merge(dst, src)
}
func (m *DeleteRRReq) XXX_Size() int {
	return xxx_messageInfo_DeleteRRReq.Size(m)
}
func (m *DeleteRRReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRRReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRRReq proto.InternalMessageInfo

func (m *DeleteRRReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteRRReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteRRReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteRRReq) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *DeleteRRReq) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *DeleteRRReq) GetRData() string {
	if m != nil {
		return m.RData
	}
	return ""
}

func (m *DeleteRRReq) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *DeleteRRReq) GetViewName() string {
	if m != nil {
		return m.ViewName
	}
	return ""
}

func (m *DeleteRRReq) GetViewKey() string {
	if m != nil {
		return m.ViewKey
	}
	return ""
}

func (m *DeleteRRReq) GetZoneName() string {
	if m != nil {
		return m.ZoneName
	}
	return ""
}

type CreateViewReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Priority             uint32          `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	Dns64                string          `protobuf:"bytes,5,opt,name=dns64,proto3" json:"dns64,omitempty"`
	Key                  string          `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	Acls                 []string        `protobuf:"bytes,7,rep,name=acls,proto3" json:"acls,omitempty"`
	ViewPriority         []*ViewPriority `protobuf:"bytes,8,rep,name=view_priority,json=viewPriority,proto3" json:"view_priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateViewReq) Reset()         { *m = CreateViewReq{} }
func (m *CreateViewReq) String() string { return proto.CompactTextString(m) }
func (*CreateViewReq) ProtoMessage()    {}
func (*CreateViewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{12}
}
func (m *CreateViewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateViewReq.Unmarshal(m, b)
}
func (m *CreateViewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateViewReq.Marshal(b, m, deterministic)
}
func (dst *CreateViewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateViewReq.Merge(dst, src)
}
func (m *CreateViewReq) XXX_Size() int {
	return xxx_messageInfo_CreateViewReq.Size(m)
}
func (m *CreateViewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateViewReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateViewReq proto.InternalMessageInfo

func (m *CreateViewReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateViewReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateViewReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateViewReq) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *CreateViewReq) GetDns64() string {
	if m != nil {
		return m.Dns64
	}
	return ""
}

func (m *CreateViewReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CreateViewReq) GetAcls() []string {
	if m != nil {
		return m.Acls
	}
	return nil
}

func (m *CreateViewReq) GetViewPriority() []*ViewPriority {
	if m != nil {
		return m.ViewPriority
	}
	return nil
}

type ViewPriority struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Priority             uint32   `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewPriority) Reset()         { *m = ViewPriority{} }
func (m *ViewPriority) String() string { return proto.CompactTextString(m) }
func (*ViewPriority) ProtoMessage()    {}
func (*ViewPriority) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{13}
}
func (m *ViewPriority) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewPriority.Unmarshal(m, b)
}
func (m *ViewPriority) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewPriority.Marshal(b, m, deterministic)
}
func (dst *ViewPriority) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewPriority.Merge(dst, src)
}
func (m *ViewPriority) XXX_Size() int {
	return xxx_messageInfo_ViewPriority.Size(m)
}
func (m *ViewPriority) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewPriority.DiscardUnknown(m)
}

var xxx_messageInfo_ViewPriority proto.InternalMessageInfo

func (m *ViewPriority) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ViewPriority) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

type UpdateViewReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Priority             uint32          `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Dns64                string          `protobuf:"bytes,4,opt,name=dns64,proto3" json:"dns64,omitempty"`
	Acls                 []string        `protobuf:"bytes,5,rep,name=acls,proto3" json:"acls,omitempty"`
	ViewPriority         []*ViewPriority `protobuf:"bytes,6,rep,name=view_priority,json=viewPriority,proto3" json:"view_priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateViewReq) Reset()         { *m = UpdateViewReq{} }
func (m *UpdateViewReq) String() string { return proto.CompactTextString(m) }
func (*UpdateViewReq) ProtoMessage()    {}
func (*UpdateViewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{14}
}
func (m *UpdateViewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateViewReq.Unmarshal(m, b)
}
func (m *UpdateViewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateViewReq.Marshal(b, m, deterministic)
}
func (dst *UpdateViewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateViewReq.Merge(dst, src)
}
func (m *UpdateViewReq) XXX_Size() int {
	return xxx_messageInfo_UpdateViewReq.Size(m)
}
func (m *UpdateViewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateViewReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateViewReq proto.InternalMessageInfo

func (m *UpdateViewReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UpdateViewReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateViewReq) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *UpdateViewReq) GetDns64() string {
	if m != nil {
		return m.Dns64
	}
	return ""
}

func (m *UpdateViewReq) GetAcls() []string {
	if m != nil {
		return m.Acls
	}
	return nil
}

func (m *UpdateViewReq) GetViewPriority() []*ViewPriority {
	if m != nil {
		return m.ViewPriority
	}
	return nil
}

type DeleteViewReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ViewPriority         []*ViewPriority `protobuf:"bytes,3,rep,name=view_priority,json=viewPriority,proto3" json:"view_priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteViewReq) Reset()         { *m = DeleteViewReq{} }
func (m *DeleteViewReq) String() string { return proto.CompactTextString(m) }
func (*DeleteViewReq) ProtoMessage()    {}
func (*DeleteViewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{15}
}
func (m *DeleteViewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteViewReq.Unmarshal(m, b)
}
func (m *DeleteViewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteViewReq.Marshal(b, m, deterministic)
}
func (dst *DeleteViewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteViewReq.Merge(dst, src)
}
func (m *DeleteViewReq) XXX_Size() int {
	return xxx_messageInfo_DeleteViewReq.Size(m)
}
func (m *DeleteViewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteViewReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteViewReq proto.InternalMessageInfo

func (m *DeleteViewReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteViewReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteViewReq) GetViewPriority() []*ViewPriority {
	if m != nil {
		return m.ViewPriority
	}
	return nil
}

type CreateUrlRedirectReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Domain               string          `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Url                  string          `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	ViewId               string          `protobuf:"bytes,5,opt,name=view_id,json=viewId,proto3" json:"view_id,omitempty"`
	IsHttps              bool            `protobuf:"varint,6,opt,name=is_https,json=isHttps,proto3" json:"is_https,omitempty"`
	Key                  []byte          `protobuf:"bytes,7,opt,name=key,proto3" json:"key,omitempty"`
	Crt                  []byte          `protobuf:"bytes,8,opt,name=crt,proto3" json:"crt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateUrlRedirectReq) Reset()         { *m = CreateUrlRedirectReq{} }
func (m *CreateUrlRedirectReq) String() string { return proto.CompactTextString(m) }
func (*CreateUrlRedirectReq) ProtoMessage()    {}
func (*CreateUrlRedirectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{16}
}
func (m *CreateUrlRedirectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUrlRedirectReq.Unmarshal(m, b)
}
func (m *CreateUrlRedirectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUrlRedirectReq.Marshal(b, m, deterministic)
}
func (dst *CreateUrlRedirectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUrlRedirectReq.Merge(dst, src)
}
func (m *CreateUrlRedirectReq) XXX_Size() int {
	return xxx_messageInfo_CreateUrlRedirectReq.Size(m)
}
func (m *CreateUrlRedirectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUrlRedirectReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUrlRedirectReq proto.InternalMessageInfo

func (m *CreateUrlRedirectReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateUrlRedirectReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateUrlRedirectReq) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *CreateUrlRedirectReq) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CreateUrlRedirectReq) GetViewId() string {
	if m != nil {
		return m.ViewId
	}
	return ""
}

func (m *CreateUrlRedirectReq) GetIsHttps() bool {
	if m != nil {
		return m.IsHttps
	}
	return false
}

func (m *CreateUrlRedirectReq) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CreateUrlRedirectReq) GetCrt() []byte {
	if m != nil {
		return m.Crt
	}
	return nil
}

type UpdateUrlRedirectReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Domain               string          `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Url                  string          `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	View                 string          `protobuf:"bytes,5,opt,name=view,proto3" json:"view,omitempty"`
	IsHttps              bool            `protobuf:"varint,6,opt,name=is_https,json=isHttps,proto3" json:"is_https,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateUrlRedirectReq) Reset()         { *m = UpdateUrlRedirectReq{} }
func (m *UpdateUrlRedirectReq) String() string { return proto.CompactTextString(m) }
func (*UpdateUrlRedirectReq) ProtoMessage()    {}
func (*UpdateUrlRedirectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{17}
}
func (m *UpdateUrlRedirectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUrlRedirectReq.Unmarshal(m, b)
}
func (m *UpdateUrlRedirectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUrlRedirectReq.Marshal(b, m, deterministic)
}
func (dst *UpdateUrlRedirectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUrlRedirectReq.Merge(dst, src)
}
func (m *UpdateUrlRedirectReq) XXX_Size() int {
	return xxx_messageInfo_UpdateUrlRedirectReq.Size(m)
}
func (m *UpdateUrlRedirectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUrlRedirectReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUrlRedirectReq proto.InternalMessageInfo

func (m *UpdateUrlRedirectReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UpdateUrlRedirectReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateUrlRedirectReq) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *UpdateUrlRedirectReq) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *UpdateUrlRedirectReq) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

func (m *UpdateUrlRedirectReq) GetIsHttps() bool {
	if m != nil {
		return m.IsHttps
	}
	return false
}

type DeleteUrlRedirectReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Domain               string          `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	View                 string          `protobuf:"bytes,4,opt,name=view,proto3" json:"view,omitempty"`
	IsHttps              bool            `protobuf:"varint,5,opt,name=is_https,json=isHttps,proto3" json:"is_https,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteUrlRedirectReq) Reset()         { *m = DeleteUrlRedirectReq{} }
func (m *DeleteUrlRedirectReq) String() string { return proto.CompactTextString(m) }
func (*DeleteUrlRedirectReq) ProtoMessage()    {}
func (*DeleteUrlRedirectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{18}
}
func (m *DeleteUrlRedirectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteUrlRedirectReq.Unmarshal(m, b)
}
func (m *DeleteUrlRedirectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteUrlRedirectReq.Marshal(b, m, deterministic)
}
func (dst *DeleteUrlRedirectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteUrlRedirectReq.Merge(dst, src)
}
func (m *DeleteUrlRedirectReq) XXX_Size() int {
	return xxx_messageInfo_DeleteUrlRedirectReq.Size(m)
}
func (m *DeleteUrlRedirectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteUrlRedirectReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteUrlRedirectReq proto.InternalMessageInfo

func (m *DeleteUrlRedirectReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteUrlRedirectReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteUrlRedirectReq) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *DeleteUrlRedirectReq) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

func (m *DeleteUrlRedirectReq) GetIsHttps() bool {
	if m != nil {
		return m.IsHttps
	}
	return false
}

type CreateRedirectionReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Ttl                  uint32          `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	DataType             string          `protobuf:"bytes,5,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	RedirectType         string          `protobuf:"bytes,6,opt,name=redirect_type,json=redirectType,proto3" json:"redirect_type,omitempty"`
	RData                string          `protobuf:"bytes,7,opt,name=r_data,json=rData,proto3" json:"r_data,omitempty"`
	ViewId               string          `protobuf:"bytes,8,opt,name=view_id,json=viewId,proto3" json:"view_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateRedirectionReq) Reset()         { *m = CreateRedirectionReq{} }
func (m *CreateRedirectionReq) String() string { return proto.CompactTextString(m) }
func (*CreateRedirectionReq) ProtoMessage()    {}
func (*CreateRedirectionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{19}
}
func (m *CreateRedirectionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRedirectionReq.Unmarshal(m, b)
}
func (m *CreateRedirectionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRedirectionReq.Marshal(b, m, deterministic)
}
func (dst *CreateRedirectionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRedirectionReq.Merge(dst, src)
}
func (m *CreateRedirectionReq) XXX_Size() int {
	return xxx_messageInfo_CreateRedirectionReq.Size(m)
}
func (m *CreateRedirectionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRedirectionReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRedirectionReq proto.InternalMessageInfo

func (m *CreateRedirectionReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateRedirectionReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateRedirectionReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRedirectionReq) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *CreateRedirectionReq) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *CreateRedirectionReq) GetRedirectType() string {
	if m != nil {
		return m.RedirectType
	}
	return ""
}

func (m *CreateRedirectionReq) GetRData() string {
	if m != nil {
		return m.RData
	}
	return ""
}

func (m *CreateRedirectionReq) GetViewId() string {
	if m != nil {
		return m.ViewId
	}
	return ""
}

type UpdateRedirectionReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	DataType             string          `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	RedirectType         string          `protobuf:"bytes,4,opt,name=redirect_type,json=redirectType,proto3" json:"redirect_type,omitempty"`
	RData                string          `protobuf:"bytes,5,opt,name=r_data,json=rData,proto3" json:"r_data,omitempty"`
	Ttl                  uint32          `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	RedirectTypeChanged  bool            `protobuf:"varint,7,opt,name=redirect_type_changed,json=redirectTypeChanged,proto3" json:"redirect_type_changed,omitempty"`
	View                 string          `protobuf:"bytes,8,opt,name=view,proto3" json:"view,omitempty"`
	Name                 string          `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateRedirectionReq) Reset()         { *m = UpdateRedirectionReq{} }
func (m *UpdateRedirectionReq) String() string { return proto.CompactTextString(m) }
func (*UpdateRedirectionReq) ProtoMessage()    {}
func (*UpdateRedirectionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{20}
}
func (m *UpdateRedirectionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRedirectionReq.Unmarshal(m, b)
}
func (m *UpdateRedirectionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRedirectionReq.Marshal(b, m, deterministic)
}
func (dst *UpdateRedirectionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRedirectionReq.Merge(dst, src)
}
func (m *UpdateRedirectionReq) XXX_Size() int {
	return xxx_messageInfo_UpdateRedirectionReq.Size(m)
}
func (m *UpdateRedirectionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRedirectionReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRedirectionReq proto.InternalMessageInfo

func (m *UpdateRedirectionReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UpdateRedirectionReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateRedirectionReq) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *UpdateRedirectionReq) GetRedirectType() string {
	if m != nil {
		return m.RedirectType
	}
	return ""
}

func (m *UpdateRedirectionReq) GetRData() string {
	if m != nil {
		return m.RData
	}
	return ""
}

func (m *UpdateRedirectionReq) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *UpdateRedirectionReq) GetRedirectTypeChanged() bool {
	if m != nil {
		return m.RedirectTypeChanged
	}
	return false
}

func (m *UpdateRedirectionReq) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

func (m *UpdateRedirectionReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteRedirectionReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	RedirectType         string          `protobuf:"bytes,3,opt,name=redirect_type,json=redirectType,proto3" json:"redirect_type,omitempty"`
	View                 string          `protobuf:"bytes,4,opt,name=view,proto3" json:"view,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteRedirectionReq) Reset()         { *m = DeleteRedirectionReq{} }
func (m *DeleteRedirectionReq) String() string { return proto.CompactTextString(m) }
func (*DeleteRedirectionReq) ProtoMessage()    {}
func (*DeleteRedirectionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{21}
}
func (m *DeleteRedirectionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRedirectionReq.Unmarshal(m, b)
}
func (m *DeleteRedirectionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRedirectionReq.Marshal(b, m, deterministic)
}
func (dst *DeleteRedirectionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRedirectionReq.Merge(dst, src)
}
func (m *DeleteRedirectionReq) XXX_Size() int {
	return xxx_messageInfo_DeleteRedirectionReq.Size(m)
}
func (m *DeleteRedirectionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRedirectionReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRedirectionReq proto.InternalMessageInfo

func (m *DeleteRedirectionReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteRedirectionReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteRedirectionReq) GetRedirectType() string {
	if m != nil {
		return m.RedirectType
	}
	return ""
}

func (m *DeleteRedirectionReq) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

type UpdateForwardReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ForwardZones         []*ForwardZone  `protobuf:"bytes,2,rep,name=forwardZones,proto3" json:"forwardZones,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateForwardReq) Reset()         { *m = UpdateForwardReq{} }
func (m *UpdateForwardReq) String() string { return proto.CompactTextString(m) }
func (*UpdateForwardReq) ProtoMessage()    {}
func (*UpdateForwardReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{22}
}
func (m *UpdateForwardReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateForwardReq.Unmarshal(m, b)
}
func (m *UpdateForwardReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateForwardReq.Marshal(b, m, deterministic)
}
func (dst *UpdateForwardReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateForwardReq.Merge(dst, src)
}
func (m *UpdateForwardReq) XXX_Size() int {
	return xxx_messageInfo_UpdateForwardReq.Size(m)
}
func (m *UpdateForwardReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateForwardReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateForwardReq proto.InternalMessageInfo

func (m *UpdateForwardReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UpdateForwardReq) GetForwardZones() []*ForwardZone {
	if m != nil {
		return m.ForwardZones
	}
	return nil
}

type ForwardZone struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Domain               string   `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	ForwardType          string   `protobuf:"bytes,3,opt,name=forward_type,json=forwardType,proto3" json:"forward_type,omitempty"`
	ForwardIps           []string `protobuf:"bytes,4,rep,name=forward_ips,json=forwardIps,proto3" json:"forward_ips,omitempty"`
	View                 string   `protobuf:"bytes,5,opt,name=view,proto3" json:"view,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForwardZone) Reset()         { *m = ForwardZone{} }
func (m *ForwardZone) String() string { return proto.CompactTextString(m) }
func (*ForwardZone) ProtoMessage()    {}
func (*ForwardZone) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{23}
}
func (m *ForwardZone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForwardZone.Unmarshal(m, b)
}
func (m *ForwardZone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForwardZone.Marshal(b, m, deterministic)
}
func (dst *ForwardZone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardZone.Merge(dst, src)
}
func (m *ForwardZone) XXX_Size() int {
	return xxx_messageInfo_ForwardZone.Size(m)
}
func (m *ForwardZone) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardZone.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardZone proto.InternalMessageInfo

func (m *ForwardZone) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ForwardZone) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *ForwardZone) GetForwardType() string {
	if m != nil {
		return m.ForwardType
	}
	return ""
}

func (m *ForwardZone) GetForwardIps() []string {
	if m != nil {
		return m.ForwardIps
	}
	return nil
}

func (m *ForwardZone) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

type ForwardView struct {
	View                 string         `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	ForwardZones         []*ForwardZone `protobuf:"bytes,2,rep,name=forward_zones,json=forwardZones,proto3" json:"forward_zones,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ForwardView) Reset()         { *m = ForwardView{} }
func (m *ForwardView) String() string { return proto.CompactTextString(m) }
func (*ForwardView) ProtoMessage()    {}
func (*ForwardView) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{24}
}
func (m *ForwardView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForwardView.Unmarshal(m, b)
}
func (m *ForwardView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForwardView.Marshal(b, m, deterministic)
}
func (dst *ForwardView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardView.Merge(dst, src)
}
func (m *ForwardView) XXX_Size() int {
	return xxx_messageInfo_ForwardView.Size(m)
}
func (m *ForwardView) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardView.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardView proto.InternalMessageInfo

func (m *ForwardView) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

func (m *ForwardView) GetForwardZones() []*ForwardZone {
	if m != nil {
		return m.ForwardZones
	}
	return nil
}

type CreateForwardZoneReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ForwardType          string          `protobuf:"bytes,4,opt,name=forward_type,json=forwardType,proto3" json:"forward_type,omitempty"`
	ForwardIps           []string        `protobuf:"bytes,5,rep,name=forward_ips,json=forwardIps,proto3" json:"forward_ips,omitempty"`
	ViewId               string          `protobuf:"bytes,6,opt,name=view_id,json=viewId,proto3" json:"view_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateForwardZoneReq) Reset()         { *m = CreateForwardZoneReq{} }
func (m *CreateForwardZoneReq) String() string { return proto.CompactTextString(m) }
func (*CreateForwardZoneReq) ProtoMessage()    {}
func (*CreateForwardZoneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{25}
}
func (m *CreateForwardZoneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateForwardZoneReq.Unmarshal(m, b)
}
func (m *CreateForwardZoneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateForwardZoneReq.Marshal(b, m, deterministic)
}
func (dst *CreateForwardZoneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateForwardZoneReq.Merge(dst, src)
}
func (m *CreateForwardZoneReq) XXX_Size() int {
	return xxx_messageInfo_CreateForwardZoneReq.Size(m)
}
func (m *CreateForwardZoneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateForwardZoneReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateForwardZoneReq proto.InternalMessageInfo

func (m *CreateForwardZoneReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CreateForwardZoneReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateForwardZoneReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateForwardZoneReq) GetForwardType() string {
	if m != nil {
		return m.ForwardType
	}
	return ""
}

func (m *CreateForwardZoneReq) GetForwardIps() []string {
	if m != nil {
		return m.ForwardIps
	}
	return nil
}

func (m *CreateForwardZoneReq) GetViewId() string {
	if m != nil {
		return m.ViewId
	}
	return ""
}

type UpdateForwardZoneReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ForwardType          string          `protobuf:"bytes,3,opt,name=forward_type,json=forwardType,proto3" json:"forward_type,omitempty"`
	ForwardIps           []string        `protobuf:"bytes,4,rep,name=forward_ips,json=forwardIps,proto3" json:"forward_ips,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateForwardZoneReq) Reset()         { *m = UpdateForwardZoneReq{} }
func (m *UpdateForwardZoneReq) String() string { return proto.CompactTextString(m) }
func (*UpdateForwardZoneReq) ProtoMessage()    {}
func (*UpdateForwardZoneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{26}
}
func (m *UpdateForwardZoneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateForwardZoneReq.Unmarshal(m, b)
}
func (m *UpdateForwardZoneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateForwardZoneReq.Marshal(b, m, deterministic)
}
func (dst *UpdateForwardZoneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateForwardZoneReq.Merge(dst, src)
}
func (m *UpdateForwardZoneReq) XXX_Size() int {
	return xxx_messageInfo_UpdateForwardZoneReq.Size(m)
}
func (m *UpdateForwardZoneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateForwardZoneReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateForwardZoneReq proto.InternalMessageInfo

func (m *UpdateForwardZoneReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *UpdateForwardZoneReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateForwardZoneReq) GetForwardType() string {
	if m != nil {
		return m.ForwardType
	}
	return ""
}

func (m *UpdateForwardZoneReq) GetForwardIps() []string {
	if m != nil {
		return m.ForwardIps
	}
	return nil
}

type DeleteForwardZoneReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteForwardZoneReq) Reset()         { *m = DeleteForwardZoneReq{} }
func (m *DeleteForwardZoneReq) String() string { return proto.CompactTextString(m) }
func (*DeleteForwardZoneReq) ProtoMessage()    {}
func (*DeleteForwardZoneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{27}
}
func (m *DeleteForwardZoneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteForwardZoneReq.Unmarshal(m, b)
}
func (m *DeleteForwardZoneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteForwardZoneReq.Marshal(b, m, deterministic)
}
func (dst *DeleteForwardZoneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteForwardZoneReq.Merge(dst, src)
}
func (m *DeleteForwardZoneReq) XXX_Size() int {
	return xxx_messageInfo_DeleteForwardZoneReq.Size(m)
}
func (m *DeleteForwardZoneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteForwardZoneReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteForwardZoneReq proto.InternalMessageInfo

func (m *DeleteForwardZoneReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteForwardZoneReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type FlushForwardZoneReq struct {
	Header               *DDIRequestHead `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ForwardViews         []*ForwardView  `protobuf:"bytes,2,rep,name=forward_views,json=forwardViews,proto3" json:"forward_views,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FlushForwardZoneReq) Reset()         { *m = FlushForwardZoneReq{} }
func (m *FlushForwardZoneReq) String() string { return proto.CompactTextString(m) }
func (*FlushForwardZoneReq) ProtoMessage()    {}
func (*FlushForwardZoneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{28}
}
func (m *FlushForwardZoneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushForwardZoneReq.Unmarshal(m, b)
}
func (m *FlushForwardZoneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushForwardZoneReq.Marshal(b, m, deterministic)
}
func (dst *FlushForwardZoneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushForwardZoneReq.Merge(dst, src)
}
func (m *FlushForwardZoneReq) XXX_Size() int {
	return xxx_messageInfo_FlushForwardZoneReq.Size(m)
}
func (m *FlushForwardZoneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushForwardZoneReq.DiscardUnknown(m)
}

var xxx_messageInfo_FlushForwardZoneReq proto.InternalMessageInfo

func (m *FlushForwardZoneReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *FlushForwardZoneReq) GetForwardViews() []*ForwardView {
	if m != nil {
		return m.ForwardViews
	}
	return nil
}

type BatchUpdateForwardZoneReq struct {
	Header               *DDIRequestHead                                   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	NewViewForwardZones  map[string]*BatchUpdateForwardZoneReqForwardZones `protobuf:"bytes,2,rep,name=new_view_forward_zones,json=newViewForwardZones,proto3" json:"new_view_forward_zones,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	OldViewForwardZones  map[string]*BatchUpdateForwardZoneReqForwardZones `protobuf:"bytes,3,rep,name=old_view_forward_zones,json=oldViewForwardZones,proto3" json:"old_view_forward_zones,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *BatchUpdateForwardZoneReq) Reset()         { *m = BatchUpdateForwardZoneReq{} }
func (m *BatchUpdateForwardZoneReq) String() string { return proto.CompactTextString(m) }
func (*BatchUpdateForwardZoneReq) ProtoMessage()    {}
func (*BatchUpdateForwardZoneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{29}
}
func (m *BatchUpdateForwardZoneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUpdateForwardZoneReq.Unmarshal(m, b)
}
func (m *BatchUpdateForwardZoneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUpdateForwardZoneReq.Marshal(b, m, deterministic)
}
func (dst *BatchUpdateForwardZoneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUpdateForwardZoneReq.Merge(dst, src)
}
func (m *BatchUpdateForwardZoneReq) XXX_Size() int {
	return xxx_messageInfo_BatchUpdateForwardZoneReq.Size(m)
}
func (m *BatchUpdateForwardZoneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUpdateForwardZoneReq.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUpdateForwardZoneReq proto.InternalMessageInfo

func (m *BatchUpdateForwardZoneReq) GetHeader() *DDIRequestHead {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BatchUpdateForwardZoneReq) GetNewViewForwardZones() map[string]*BatchUpdateForwardZoneReqForwardZones {
	if m != nil {
		return m.NewViewForwardZones
	}
	return nil
}

func (m *BatchUpdateForwardZoneReq) GetOldViewForwardZones() map[string]*BatchUpdateForwardZoneReqForwardZones {
	if m != nil {
		return m.OldViewForwardZones
	}
	return nil
}

type BatchUpdateForwardZoneReqForwardZones struct {
	ForwardZones         []*ForwardZone `protobuf:"bytes,1,rep,name=forward_zones,json=forwardZones,proto3" json:"forward_zones,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BatchUpdateForwardZoneReqForwardZones) Reset()         { *m = BatchUpdateForwardZoneReqForwardZones{} }
func (m *BatchUpdateForwardZoneReqForwardZones) String() string { return proto.CompactTextString(m) }
func (*BatchUpdateForwardZoneReqForwardZones) ProtoMessage()    {}
func (*BatchUpdateForwardZoneReqForwardZones) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{29, 0}
}
func (m *BatchUpdateForwardZoneReqForwardZones) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUpdateForwardZoneReqForwardZones.Unmarshal(m, b)
}
func (m *BatchUpdateForwardZoneReqForwardZones) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUpdateForwardZoneReqForwardZones.Marshal(b, m, deterministic)
}
func (dst *BatchUpdateForwardZoneReqForwardZones) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUpdateForwardZoneReqForwardZones.Merge(dst, src)
}
func (m *BatchUpdateForwardZoneReqForwardZones) XXX_Size() int {
	return xxx_messageInfo_BatchUpdateForwardZoneReqForwardZones.Size(m)
}
func (m *BatchUpdateForwardZoneReqForwardZones) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUpdateForwardZoneReqForwardZones.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUpdateForwardZoneReqForwardZones proto.InternalMessageInfo

func (m *BatchUpdateForwardZoneReqForwardZones) GetForwardZones() []*ForwardZone {
	if m != nil {
		return m.ForwardZones
	}
	return nil
}

type UploadLogReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	User                 string   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	MasterNodeIp         string   `protobuf:"bytes,5,opt,name=master_node_ip,json=masterNodeIp,proto3" json:"master_node_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadLogReq) Reset()         { *m = UploadLogReq{} }
func (m *UploadLogReq) String() string { return proto.CompactTextString(m) }
func (*UploadLogReq) ProtoMessage()    {}
func (*UploadLogReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dns_c05edd50b6822af4, []int{30}
}
func (m *UploadLogReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadLogReq.Unmarshal(m, b)
}
func (m *UploadLogReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadLogReq.Marshal(b, m, deterministic)
}
func (dst *UploadLogReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadLogReq.Merge(dst, src)
}
func (m *UploadLogReq) XXX_Size() int {
	return xxx_messageInfo_UploadLogReq.Size(m)
}
func (m *UploadLogReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadLogReq.DiscardUnknown(m)
}

var xxx_messageInfo_UploadLogReq proto.InternalMessageInfo

func (m *UploadLogReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UploadLogReq) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *UploadLogReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UploadLogReq) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UploadLogReq) GetMasterNodeIp() string {
	if m != nil {
		return m.MasterNodeIp
	}
	return ""
}

func init() {
	proto.RegisterType((*DNSStartReq)(nil), "proto.DNSStartReq")
	proto.RegisterType((*DNSStopReq)(nil), "proto.DNSStopReq")
	proto.RegisterType((*UpdateGlobalConfigReq)(nil), "proto.UpdateGlobalConfigReq")
	proto.RegisterType((*CreateACLReq)(nil), "proto.CreateACLReq")
	proto.RegisterType((*UpdateACLReq)(nil), "proto.UpdateACLReq")
	proto.RegisterType((*DeleteACLReq)(nil), "proto.DeleteACLReq")
	proto.RegisterType((*CreateZoneReq)(nil), "proto.CreateZoneReq")
	proto.RegisterType((*UpdateZoneReq)(nil), "proto.UpdateZoneReq")
	proto.RegisterType((*DeleteZoneReq)(nil), "proto.DeleteZoneReq")
	proto.RegisterType((*CreateRRReq)(nil), "proto.CreateRRReq")
	proto.RegisterType((*UpdateRRReq)(nil), "proto.UpdateRRReq")
	proto.RegisterType((*DeleteRRReq)(nil), "proto.DeleteRRReq")
	proto.RegisterType((*CreateViewReq)(nil), "proto.CreateViewReq")
	proto.RegisterType((*ViewPriority)(nil), "proto.ViewPriority")
	proto.RegisterType((*UpdateViewReq)(nil), "proto.UpdateViewReq")
	proto.RegisterType((*DeleteViewReq)(nil), "proto.DeleteViewReq")
	proto.RegisterType((*CreateUrlRedirectReq)(nil), "proto.CreateUrlRedirectReq")
	proto.RegisterType((*UpdateUrlRedirectReq)(nil), "proto.UpdateUrlRedirectReq")
	proto.RegisterType((*DeleteUrlRedirectReq)(nil), "proto.DeleteUrlRedirectReq")
	proto.RegisterType((*CreateRedirectionReq)(nil), "proto.CreateRedirectionReq")
	proto.RegisterType((*UpdateRedirectionReq)(nil), "proto.UpdateRedirectionReq")
	proto.RegisterType((*DeleteRedirectionReq)(nil), "proto.DeleteRedirectionReq")
	proto.RegisterType((*UpdateForwardReq)(nil), "proto.UpdateForwardReq")
	proto.RegisterType((*ForwardZone)(nil), "proto.ForwardZone")
	proto.RegisterType((*ForwardView)(nil), "proto.ForwardView")
	proto.RegisterType((*CreateForwardZoneReq)(nil), "proto.CreateForwardZoneReq")
	proto.RegisterType((*UpdateForwardZoneReq)(nil), "proto.UpdateForwardZoneReq")
	proto.RegisterType((*DeleteForwardZoneReq)(nil), "proto.DeleteForwardZoneReq")
	proto.RegisterType((*FlushForwardZoneReq)(nil), "proto.FlushForwardZoneReq")
	proto.RegisterType((*BatchUpdateForwardZoneReq)(nil), "proto.BatchUpdateForwardZoneReq")
	proto.RegisterMapType((map[string]*BatchUpdateForwardZoneReqForwardZones)(nil), "proto.BatchUpdateForwardZoneReq.NewViewForwardZonesEntry")
	proto.RegisterMapType((map[string]*BatchUpdateForwardZoneReqForwardZones)(nil), "proto.BatchUpdateForwardZoneReq.OldViewForwardZonesEntry")
	proto.RegisterType((*BatchUpdateForwardZoneReqForwardZones)(nil), "proto.BatchUpdateForwardZoneReq.forwardZones")
	proto.RegisterType((*UploadLogReq)(nil), "proto.UploadLogReq")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AgentManagerClient is the client API for AgentManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentManagerClient interface {
	StartDNS(ctx context.Context, in *DNSStartReq, opts ...grpc.CallOption) (*DDIResponse, error)
	StopDNS(ctx context.Context, in *DNSStopReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateACL(ctx context.Context, in *CreateACLReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateACL(ctx context.Context, in *UpdateACLReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteACL(ctx context.Context, in *DeleteACLReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateView(ctx context.Context, in *CreateViewReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateView(ctx context.Context, in *UpdateViewReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteView(ctx context.Context, in *DeleteViewReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateZone(ctx context.Context, in *CreateZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateZone(ctx context.Context, in *UpdateZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteZone(ctx context.Context, in *DeleteZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateForwardZone(ctx context.Context, in *CreateForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateForwardZone(ctx context.Context, in *UpdateForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteForwardZone(ctx context.Context, in *DeleteForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	FlushForwardZone(ctx context.Context, in *FlushForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	BatchUpdateForwardZone(ctx context.Context, in *BatchUpdateForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateForward(ctx context.Context, in *UpdateForwardReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateRR(ctx context.Context, in *CreateRRReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateRR(ctx context.Context, in *UpdateRRReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteRR(ctx context.Context, in *DeleteRRReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateRedirection(ctx context.Context, in *CreateRedirectionReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateRedirection(ctx context.Context, in *UpdateRedirectionReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteRedirection(ctx context.Context, in *DeleteRedirectionReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateUrlRedirect(ctx context.Context, in *CreateUrlRedirectReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateUrlRedirect(ctx context.Context, in *UpdateUrlRedirectReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteUrlRedirect(ctx context.Context, in *DeleteUrlRedirectReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateGlobalConfig(ctx context.Context, in *UpdateGlobalConfigReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UploadLog(ctx context.Context, in *UploadLogReq, opts ...grpc.CallOption) (*DDIResponse, error)
}

type agentManagerClient struct {
	cc *grpc.ClientConn
}

func NewAgentManagerClient(cc *grpc.ClientConn) AgentManagerClient {
	return &agentManagerClient{cc}
}

func (c *agentManagerClient) StartDNS(ctx context.Context, in *DNSStartReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/StartDNS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) StopDNS(ctx context.Context, in *DNSStopReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/StopDNS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateACL(ctx context.Context, in *CreateACLReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateACL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateACL(ctx context.Context, in *UpdateACLReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateACL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteACL(ctx context.Context, in *DeleteACLReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteACL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateView(ctx context.Context, in *CreateViewReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateView(ctx context.Context, in *UpdateViewReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteView(ctx context.Context, in *DeleteViewReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateZone(ctx context.Context, in *CreateZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateZone(ctx context.Context, in *UpdateZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteZone(ctx context.Context, in *DeleteZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateForwardZone(ctx context.Context, in *CreateForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateForwardZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateForwardZone(ctx context.Context, in *UpdateForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateForwardZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteForwardZone(ctx context.Context, in *DeleteForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteForwardZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) FlushForwardZone(ctx context.Context, in *FlushForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/FlushForwardZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) BatchUpdateForwardZone(ctx context.Context, in *BatchUpdateForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/BatchUpdateForwardZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateForward(ctx context.Context, in *UpdateForwardReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateForward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateRR(ctx context.Context, in *CreateRRReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateRR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateRR(ctx context.Context, in *UpdateRRReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateRR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteRR(ctx context.Context, in *DeleteRRReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteRR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateRedirection(ctx context.Context, in *CreateRedirectionReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateRedirection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateRedirection(ctx context.Context, in *UpdateRedirectionReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateRedirection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteRedirection(ctx context.Context, in *DeleteRedirectionReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteRedirection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateUrlRedirect(ctx context.Context, in *CreateUrlRedirectReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateUrlRedirect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateUrlRedirect(ctx context.Context, in *UpdateUrlRedirectReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateUrlRedirect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteUrlRedirect(ctx context.Context, in *DeleteUrlRedirectReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteUrlRedirect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateGlobalConfig(ctx context.Context, in *UpdateGlobalConfigReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateGlobalConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UploadLog(ctx context.Context, in *UploadLogReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UploadLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AgentManagerServer is the server API for AgentManager service.
type AgentManagerServer interface {
	StartDNS(context.Context, *DNSStartReq) (*DDIResponse, error)
	StopDNS(context.Context, *DNSStopReq) (*DDIResponse, error)
	CreateACL(context.Context, *CreateACLReq) (*DDIResponse, error)
	UpdateACL(context.Context, *UpdateACLReq) (*DDIResponse, error)
	DeleteACL(context.Context, *DeleteACLReq) (*DDIResponse, error)
	CreateView(context.Context, *CreateViewReq) (*DDIResponse, error)
	UpdateView(context.Context, *UpdateViewReq) (*DDIResponse, error)
	DeleteView(context.Context, *DeleteViewReq) (*DDIResponse, error)
	CreateZone(context.Context, *CreateZoneReq) (*DDIResponse, error)
	UpdateZone(context.Context, *UpdateZoneReq) (*DDIResponse, error)
	DeleteZone(context.Context, *DeleteZoneReq) (*DDIResponse, error)
	CreateForwardZone(context.Context, *CreateForwardZoneReq) (*DDIResponse, error)
	UpdateForwardZone(context.Context, *UpdateForwardZoneReq) (*DDIResponse, error)
	DeleteForwardZone(context.Context, *DeleteForwardZoneReq) (*DDIResponse, error)
	FlushForwardZone(context.Context, *FlushForwardZoneReq) (*DDIResponse, error)
	BatchUpdateForwardZone(context.Context, *BatchUpdateForwardZoneReq) (*DDIResponse, error)
	UpdateForward(context.Context, *UpdateForwardReq) (*DDIResponse, error)
	CreateRR(context.Context, *CreateRRReq) (*DDIResponse, error)
	UpdateRR(context.Context, *UpdateRRReq) (*DDIResponse, error)
	DeleteRR(context.Context, *DeleteRRReq) (*DDIResponse, error)
	CreateRedirection(context.Context, *CreateRedirectionReq) (*DDIResponse, error)
	UpdateRedirection(context.Context, *UpdateRedirectionReq) (*DDIResponse, error)
	DeleteRedirection(context.Context, *DeleteRedirectionReq) (*DDIResponse, error)
	CreateUrlRedirect(context.Context, *CreateUrlRedirectReq) (*DDIResponse, error)
	UpdateUrlRedirect(context.Context, *UpdateUrlRedirectReq) (*DDIResponse, error)
	DeleteUrlRedirect(context.Context, *DeleteUrlRedirectReq) (*DDIResponse, error)
	UpdateGlobalConfig(context.Context, *UpdateGlobalConfigReq) (*DDIResponse, error)
	UploadLog(context.Context, *UploadLogReq) (*DDIResponse, error)
}

func RegisterAgentManagerServer(s *grpc.Server, srv AgentManagerServer) {
	s.RegisterService(&_AgentManager_serviceDesc, srv)
}

func _AgentManager_StartDNS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DNSStartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).StartDNS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/StartDNS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).StartDNS(ctx, req.(*DNSStartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_StopDNS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DNSStopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).StopDNS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/StopDNS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).StopDNS(ctx, req.(*DNSStopReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateACL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateACLReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateACL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateACL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateACL(ctx, req.(*CreateACLReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateACL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateACLReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateACL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateACL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateACL(ctx, req.(*UpdateACLReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteACL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteACLReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteACL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteACL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteACL(ctx, req.(*DeleteACLReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateView(ctx, req.(*CreateViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateView(ctx, req.(*UpdateViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteView(ctx, req.(*DeleteViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateZone(ctx, req.(*CreateZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateZone(ctx, req.(*UpdateZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteZone(ctx, req.(*DeleteZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateForwardZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateForwardZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateForwardZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateForwardZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateForwardZone(ctx, req.(*CreateForwardZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateForwardZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateForwardZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateForwardZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateForwardZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateForwardZone(ctx, req.(*UpdateForwardZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteForwardZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteForwardZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteForwardZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteForwardZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteForwardZone(ctx, req.(*DeleteForwardZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_FlushForwardZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlushForwardZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).FlushForwardZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/FlushForwardZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).FlushForwardZone(ctx, req.(*FlushForwardZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_BatchUpdateForwardZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchUpdateForwardZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).BatchUpdateForwardZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/BatchUpdateForwardZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).BatchUpdateForwardZone(ctx, req.(*BatchUpdateForwardZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateForward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateForwardReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateForward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateForward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateForward(ctx, req.(*UpdateForwardReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateRR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRRReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateRR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateRR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateRR(ctx, req.(*CreateRRReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateRR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRRReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateRR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateRR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateRR(ctx, req.(*UpdateRRReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteRR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRRReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteRR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteRR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteRR(ctx, req.(*DeleteRRReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateRedirection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRedirectionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateRedirection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateRedirection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateRedirection(ctx, req.(*CreateRedirectionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateRedirection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRedirectionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateRedirection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateRedirection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateRedirection(ctx, req.(*UpdateRedirectionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteRedirection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRedirectionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteRedirection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteRedirection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteRedirection(ctx, req.(*DeleteRedirectionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateUrlRedirect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUrlRedirectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateUrlRedirect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateUrlRedirect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateUrlRedirect(ctx, req.(*CreateUrlRedirectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateUrlRedirect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUrlRedirectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateUrlRedirect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateUrlRedirect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateUrlRedirect(ctx, req.(*UpdateUrlRedirectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteUrlRedirect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUrlRedirectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteUrlRedirect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteUrlRedirect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteUrlRedirect(ctx, req.(*DeleteUrlRedirectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateGlobalConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGlobalConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateGlobalConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateGlobalConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateGlobalConfig(ctx, req.(*UpdateGlobalConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UploadLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadLogReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UploadLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UploadLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UploadLog(ctx, req.(*UploadLogReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AgentManager",
	HandlerType: (*AgentManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartDNS",
			Handler:    _AgentManager_StartDNS_Handler,
		},
		{
			MethodName: "StopDNS",
			Handler:    _AgentManager_StopDNS_Handler,
		},
		{
			MethodName: "CreateACL",
			Handler:    _AgentManager_CreateACL_Handler,
		},
		{
			MethodName: "UpdateACL",
			Handler:    _AgentManager_UpdateACL_Handler,
		},
		{
			MethodName: "DeleteACL",
			Handler:    _AgentManager_DeleteACL_Handler,
		},
		{
			MethodName: "CreateView",
			Handler:    _AgentManager_CreateView_Handler,
		},
		{
			MethodName: "UpdateView",
			Handler:    _AgentManager_UpdateView_Handler,
		},
		{
			MethodName: "DeleteView",
			Handler:    _AgentManager_DeleteView_Handler,
		},
		{
			MethodName: "CreateZone",
			Handler:    _AgentManager_CreateZone_Handler,
		},
		{
			MethodName: "UpdateZone",
			Handler:    _AgentManager_UpdateZone_Handler,
		},
		{
			MethodName: "DeleteZone",
			Handler:    _AgentManager_DeleteZone_Handler,
		},
		{
			MethodName: "CreateForwardZone",
			Handler:    _AgentManager_CreateForwardZone_Handler,
		},
		{
			MethodName: "UpdateForwardZone",
			Handler:    _AgentManager_UpdateForwardZone_Handler,
		},
		{
			MethodName: "DeleteForwardZone",
			Handler:    _AgentManager_DeleteForwardZone_Handler,
		},
		{
			MethodName: "FlushForwardZone",
			Handler:    _AgentManager_FlushForwardZone_Handler,
		},
		{
			MethodName: "BatchUpdateForwardZone",
			Handler:    _AgentManager_BatchUpdateForwardZone_Handler,
		},
		{
			MethodName: "UpdateForward",
			Handler:    _AgentManager_UpdateForward_Handler,
		},
		{
			MethodName: "CreateRR",
			Handler:    _AgentManager_CreateRR_Handler,
		},
		{
			MethodName: "UpdateRR",
			Handler:    _AgentManager_UpdateRR_Handler,
		},
		{
			MethodName: "DeleteRR",
			Handler:    _AgentManager_DeleteRR_Handler,
		},
		{
			MethodName: "CreateRedirection",
			Handler:    _AgentManager_CreateRedirection_Handler,
		},
		{
			MethodName: "UpdateRedirection",
			Handler:    _AgentManager_UpdateRedirection_Handler,
		},
		{
			MethodName: "DeleteRedirection",
			Handler:    _AgentManager_DeleteRedirection_Handler,
		},
		{
			MethodName: "CreateUrlRedirect",
			Handler:    _AgentManager_CreateUrlRedirect_Handler,
		},
		{
			MethodName: "UpdateUrlRedirect",
			Handler:    _AgentManager_UpdateUrlRedirect_Handler,
		},
		{
			MethodName: "DeleteUrlRedirect",
			Handler:    _AgentManager_DeleteUrlRedirect_Handler,
		},
		{
			MethodName: "UpdateGlobalConfig",
			Handler:    _AgentManager_UpdateGlobalConfig_Handler,
		},
		{
			MethodName: "UploadLog",
			Handler:    _AgentManager_UploadLog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dns.proto",
}

func init() { proto.RegisterFile("dns.proto", fileDescriptor_dns_c05edd50b6822af4) }

var fileDescriptor_dns_c05edd50b6822af4 = []byte{
	// 1667 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0x4f, 0x6f, 0xdb, 0xc6,
	0x12, 0x7f, 0x94, 0x44, 0x89, 0x1c, 0x51, 0x7e, 0xce, 0xfa, 0x4f, 0x14, 0xfb, 0xbd, 0xd6, 0x61,
	0x52, 0xc0, 0x45, 0x91, 0x1c, 0xdc, 0x20, 0x4d, 0x73, 0x28, 0x90, 0xda, 0x71, 0x62, 0x34, 0x71,
	0x03, 0xba, 0xce, 0x21, 0x17, 0x81, 0x16, 0x37, 0x36, 0x11, 0x9a, 0x64, 0x48, 0xca, 0x86, 0x02,
	0x14, 0xe8, 0xb1, 0x97, 0x16, 0x3d, 0xf4, 0x52, 0x20, 0x9f, 0xa1, 0xdf, 0xa2, 0x3d, 0xf6, 0xda,
	0x73, 0x7b, 0xe9, 0xa9, 0xb7, 0x7e, 0x80, 0x62, 0xff, 0x72, 0x29, 0x91, 0x92, 0xe3, 0xca, 0xe9,
	0x49, 0xbb, 0xb3, 0x3b, 0xb3, 0x33, 0xbf, 0x99, 0x9d, 0xe1, 0x8e, 0xc0, 0xf4, 0xc2, 0xf4, 0x66,
	0x9c, 0x44, 0x59, 0x84, 0x74, 0xfa, 0xb3, 0x82, 0x3c, 0xcf, 0xef, 0x25, 0x38, 0x8d, 0xa3, 0x30,
	0xc5, 0x6c, 0xc9, 0x7e, 0x0f, 0xda, 0x5b, 0xbb, 0x7b, 0x7b, 0x99, 0x9b, 0x64, 0x0e, 0x7e, 0x89,
	0x96, 0xa1, 0xd9, 0x8f, 0xc2, 0xe7, 0xfe, 0x61, 0x57, 0x5b, 0xd3, 0xd6, 0x4d, 0x87, 0xcf, 0x6c,
	0x0b, 0x80, 0x6e, 0x8b, 0x62, 0x07, 0xbf, 0xb4, 0x7f, 0xaf, 0xc1, 0xd2, 0x7e, 0xec, 0xb9, 0x19,
	0x7e, 0x10, 0x44, 0x07, 0x6e, 0xb0, 0x49, 0x37, 0x11, 0xfe, 0x1b, 0xd0, 0x3c, 0xc2, 0xae, 0x87,
	0x13, 0xca, 0xdf, 0xde, 0x58, 0x62, 0xc7, 0xdc, 0xdc, 0xda, 0xda, 0x71, 0xf0, 0xcb, 0x01, 0x4e,
	0xb3, 0x87, 0xd8, 0xf5, 0x1c, 0xbe, 0x09, 0xfd, 0x1f, 0x20, 0x88, 0x0e, 0x7b, 0x38, 0x74, 0x0f,
	0x02, 0xdc, 0xad, 0xad, 0x69, 0xeb, 0x86, 0x63, 0x06, 0xd1, 0xe1, 0x7d, 0x4a, 0x40, 0xd7, 0xa0,
	0xe3, 0x85, 0x69, 0x8a, 0xfb, 0x62, 0x47, 0x9d, 0xee, 0xb0, 0x18, 0x91, 0x6f, 0x9a, 0x87, 0x7a,
	0x96, 0x05, 0xdd, 0xc6, 0x9a, 0xb6, 0xde, 0x71, 0xc8, 0x10, 0xbd, 0x0f, 0xf3, 0x07, 0x81, 0xdb,
	0x7f, 0x71, 0x14, 0x05, 0x58, 0x70, 0xea, 0x94, 0xf3, 0xbf, 0x92, 0xce, 0x99, 0xdf, 0x01, 0x90,
	0xa4, 0xb4, 0xdb, 0x5c, 0xab, 0xaf, 0x9b, 0x8e, 0x42, 0x21, 0xa2, 0x12, 0xdc, 0x1f, 0x24, 0xa9,
	0x1f, 0x85, 0x42, 0x54, 0x8b, 0x89, 0x92, 0x74, 0x2e, 0xea, 0x03, 0xb8, 0xc4, 0x49, 0x27, 0xb8,
	0xd7, 0x0f, 0x7c, 0x1c, 0x66, 0x69, 0xd7, 0xa0, 0x5a, 0xcd, 0xcb, 0x85, 0x4d, 0x46, 0x47, 0x57,
	0xc1, 0x1a, 0x50, 0x00, 0x7b, 0xc7, 0x91, 0x87, 0x83, 0xae, 0x49, 0xd1, 0x6e, 0x33, 0xda, 0x63,
	0x42, 0xb2, 0x53, 0xb0, 0x36, 0x13, 0xec, 0x66, 0xf8, 0xde, 0xe6, 0xa3, 0x73, 0x40, 0x3b, 0x07,
	0x35, 0xdf, 0xa3, 0x90, 0x9a, 0x4e, 0xcd, 0xf7, 0x10, 0x82, 0x46, 0xe8, 0x1e, 0x33, 0x08, 0x4d,
	0x87, 0x8e, 0x09, 0x74, 0x7e, 0x9c, 0x76, 0x1b, 0xd4, 0x6c, 0x32, 0x24, 0x87, 0x32, 0xc7, 0xbe,
	0xcd, 0x43, 0x1f, 0x83, 0xb5, 0x85, 0x03, 0x3c, 0xa3, 0x43, 0xed, 0x9f, 0x34, 0xe8, 0x30, 0xe4,
	0x9e, 0x45, 0x21, 0x3e, 0x87, 0xc0, 0xcb, 0xd0, 0x3a, 0xf1, 0xf1, 0x69, 0x4f, 0x4a, 0x6d, 0x92,
	0xe9, 0x8e, 0x47, 0x16, 0x5e, 0x45, 0x21, 0x26, 0x0b, 0xcc, 0xa2, 0x26, 0x99, 0xee, 0x78, 0x68,
	0x15, 0x4c, 0xba, 0x40, 0x8d, 0x6d, 0xd0, 0x25, 0x83, 0x10, 0x76, 0x89, 0xc1, 0xd7, 0x61, 0x8e,
	0x2e, 0x3e, 0xf7, 0x03, 0xbe, 0x43, 0xa7, 0x3b, 0x2c, 0x42, 0xdd, 0xf6, 0x03, 0xb6, 0x8b, 0x87,
	0x71, 0x53, 0x86, 0xb1, 0xfd, 0xa3, 0x06, 0x1d, 0xe6, 0x8c, 0x73, 0xda, 0x31, 0xea, 0x0d, 0x7e,
	0x44, 0x3d, 0xbf, 0x29, 0xc2, 0x3f, 0x0d, 0xc5, 0x3f, 0x67, 0x53, 0x17, 0x41, 0x83, 0x80, 0x42,
	0xf5, 0x35, 0x1d, 0x3a, 0xb6, 0x4f, 0xa0, 0xc3, 0xfc, 0x38, 0x23, 0x7d, 0xcb, 0xa2, 0x47, 0x9c,
	0xdb, 0x50, 0xce, 0xfd, 0xae, 0x06, 0x6d, 0xe6, 0x70, 0xc7, 0xb9, 0xa0, 0x63, 0x15, 0xcf, 0x37,
	0x0a, 0x9e, 0x57, 0x62, 0x45, 0x2f, 0xc4, 0xca, 0x2a, 0x98, 0x9e, 0x9b, 0xb9, 0xbd, 0x6c, 0x18,
	0x63, 0x8e, 0x92, 0x41, 0x08, 0x5f, 0x0c, 0x63, 0x8c, 0x96, 0xa0, 0x99, 0xf4, 0xc8, 0x8c, 0x26,
	0x13, 0xd3, 0xd1, 0x93, 0x2d, 0x37, 0x73, 0x85, 0x83, 0x8c, 0xdc, 0x41, 0x57, 0xc0, 0xa0, 0xe2,
	0x5f, 0xe0, 0x21, 0xcf, 0x11, 0xf4, 0xb8, 0xcf, 0xf0, 0xb0, 0x18, 0x73, 0x50, 0x8c, 0x39, 0xfb,
	0x0f, 0x0d, 0xda, 0x2c, 0x76, 0x66, 0x02, 0x49, 0xc1, 0x98, 0x7a, 0xa5, 0x31, 0x8d, 0x12, 0x63,
	0xf4, 0xdc, 0x98, 0x55, 0x30, 0xa9, 0x31, 0x54, 0x63, 0x0e, 0x09, 0x21, 0xd0, 0x80, 0x52, 0x2d,
	0x6d, 0x4d, 0xb0, 0xd4, 0x18, 0xb1, 0xf4, 0xfb, 0x1a, 0xb4, 0x59, 0xd4, 0xbd, 0x7d, 0xe7, 0x17,
	0x60, 0xd1, 0x2b, 0x61, 0x69, 0x96, 0xc0, 0xd2, 0xaa, 0x80, 0xc5, 0x98, 0x00, 0xcb, 0x9b, 0x04,
	0xc0, 0x5f, 0x32, 0x09, 0x3e, 0xf5, 0xf1, 0xe9, 0x05, 0x01, 0xb3, 0x02, 0x46, 0x9c, 0xf8, 0x51,
	0xe2, 0x67, 0x43, 0x5e, 0x7f, 0xe5, 0x1c, 0x2d, 0x82, 0xee, 0x85, 0xe9, 0xed, 0x5b, 0x1c, 0x17,
	0x36, 0x21, 0xd6, 0x13, 0x4b, 0x18, 0x22, 0x64, 0x48, 0xe4, 0xba, 0xfd, 0x20, 0xed, 0xb6, 0x68,
	0x3d, 0xa0, 0x63, 0x74, 0x07, 0x3a, 0xd4, 0x68, 0x29, 0xdc, 0x58, 0xab, 0xaf, 0xb7, 0x37, 0x16,
	0xb8, 0xc6, 0xc4, 0xa2, 0x27, 0x7c, 0xc9, 0xb1, 0x4e, 0x94, 0x99, 0x7d, 0x17, 0x2c, 0x75, 0x95,
	0x5b, 0xa1, 0x49, 0x2b, 0x54, 0x8d, 0x6b, 0x45, 0x8d, 0xed, 0x5f, 0x64, 0xbe, 0x9d, 0x11, 0x64,
	0xea, 0x61, 0xf5, 0x2a, 0x78, 0x1a, 0x2a, 0x3c, 0x02, 0x0c, 0x7d, 0x12, 0x18, 0xcd, 0xb3, 0x82,
	0xf1, 0xb5, 0x26, 0x12, 0xf2, 0x8c, 0x0c, 0x1a, 0x53, 0xa5, 0x7e, 0x56, 0x55, 0x7e, 0xd5, 0x60,
	0x91, 0x85, 0xe3, 0x7e, 0x12, 0x38, 0xd8, 0xf3, 0x13, 0xdc, 0xcf, 0x66, 0xa0, 0xd1, 0x32, 0x34,
	0xbd, 0xe8, 0xd8, 0xf5, 0x43, 0x51, 0x90, 0xd9, 0x8c, 0xc4, 0xd9, 0x20, 0x09, 0x38, 0xb8, 0x64,
	0x58, 0x9d, 0xa8, 0xaf, 0x80, 0xe1, 0xa7, 0xbd, 0xa3, 0x2c, 0x8b, 0x53, 0x1a, 0x97, 0x86, 0xd3,
	0xf2, 0xd3, 0x87, 0x64, 0x2a, 0xa2, 0x95, 0xdc, 0x55, 0x8b, 0x45, 0xeb, 0x3c, 0xd4, 0xfb, 0x49,
	0x46, 0x6f, 0xa9, 0xe5, 0x90, 0x21, 0xa9, 0xd2, 0x8b, 0x2c, 0x6a, 0xfe, 0x2d, 0xcb, 0x44, 0x49,
	0xd4, 0xf3, 0x92, 0x38, 0xc1, 0x28, 0xfb, 0xb5, 0x06, 0x8b, 0x2c, 0x2a, 0xde, 0x8e, 0xc2, 0x25,
	0x15, 0xbb, 0xa0, 0x9e, 0x5e, 0x54, 0xef, 0x4f, 0x19, 0x29, 0x42, 0x37, 0x3f, 0x0a, 0x2f, 0xee,
	0x53, 0x74, 0xe4, 0xe9, 0x30, 0x31, 0xa3, 0x5f, 0x83, 0x4e, 0xc2, 0x75, 0x52, 0xcb, 0xba, 0x25,
	0x88, 0x93, 0x4a, 0xbb, 0x12, 0x7e, 0x86, 0x1a, 0x7e, 0xf6, 0xeb, 0x9a, 0x88, 0x9f, 0xd9, 0xda,
	0x3b, 0xb1, 0x64, 0x8f, 0x59, 0xd2, 0x98, 0x68, 0x89, 0x5e, 0x52, 0xc0, 0xf2, 0x0f, 0x55, 0xb4,
	0x01, 0x4b, 0x05, 0x69, 0xbd, 0xfe, 0x91, 0x1b, 0x1e, 0x62, 0x8f, 0xbf, 0x94, 0x16, 0x54, 0xa9,
	0x9b, 0x6c, 0x49, 0x46, 0x85, 0xa1, 0x44, 0x85, 0x70, 0x91, 0x99, 0xbb, 0xc8, 0xfe, 0x56, 0x46,
	0xeb, 0x6c, 0xe1, 0x19, 0x43, 0xa0, 0x5e, 0x82, 0x40, 0xd9, 0xc7, 0xe6, 0x10, 0xe6, 0x99, 0xbb,
	0xb6, 0xa3, 0xe4, 0xd4, 0x4d, 0xbc, 0x73, 0xe8, 0x72, 0x1b, 0xac, 0xe7, 0x8c, 0x99, 0x7c, 0x28,
	0xa7, 0xdd, 0x1a, 0xcd, 0xa2, 0x88, 0x33, 0x6d, 0xe7, 0x4b, 0x4e, 0x61, 0x9f, 0xfd, 0x8d, 0x06,
	0x6d, 0x65, 0x75, 0xac, 0xb8, 0xe5, 0x37, 0xb0, 0x56, 0xb8, 0x81, 0x57, 0xe5, 0x79, 0xaa, 0xa9,
	0x6d, 0x4e, 0xa3, 0x96, 0xbe, 0x0b, 0x62, 0xda, 0xcb, 0x1f, 0x67, 0xc0, 0x49, 0x3b, 0x71, 0x5a,
	0x96, 0x64, 0xec, 0x67, 0x52, 0x9d, 0xa7, 0xdc, 0x7d, 0x74, 0x8b, 0xa6, 0xb8, 0xf4, 0x23, 0xe8,
	0x08, 0xb9, 0xaf, 0xde, 0xc8, 0xd6, 0x9f, 0x65, 0x1a, 0x50, 0xf7, 0x5c, 0x4c, 0x1a, 0x18, 0xc5,
	0xa7, 0x31, 0x15, 0x1f, 0x7d, 0x0c, 0x1f, 0xe5, 0x7e, 0x37, 0x0b, 0xf7, 0xfb, 0x07, 0x59, 0x1f,
	0x66, 0x6b, 0xc8, 0x0c, 0x9c, 0x6a, 0xef, 0x8b, 0xbb, 0x35, 0x53, 0xd5, 0xec, 0x2f, 0x61, 0x61,
	0x3b, 0x18, 0xa4, 0x47, 0xff, 0x4c, 0xaa, 0x12, 0x3a, 0x04, 0xca, 0x8a, 0xd0, 0xa1, 0x5f, 0x36,
	0x02, 0x09, 0x32, 0x49, 0xed, 0xdf, 0x1a, 0x70, 0xe5, 0x53, 0x37, 0xeb, 0x1f, 0xcd, 0x02, 0xf6,
	0x10, 0x96, 0x43, 0x7c, 0x4a, 0x35, 0xe8, 0x95, 0x45, 0xf2, 0xc7, 0x9c, 0xbd, 0xf2, 0xc0, 0x9b,
	0xbb, 0xf8, 0x94, 0xe8, 0xa5, 0x50, 0xd3, 0xfb, 0x61, 0x96, 0x0c, 0x9d, 0x85, 0x70, 0x7c, 0x85,
	0x9c, 0x17, 0x05, 0x5e, 0xd9, 0x79, 0xf5, 0x33, 0x9e, 0xf7, 0x79, 0xe0, 0x55, 0x9c, 0x17, 0x8d,
	0xaf, 0xac, 0x3c, 0x28, 0xe6, 0xa2, 0xf1, 0x0b, 0xab, 0x9d, 0xed, 0xc2, 0xae, 0x0c, 0xa0, 0x5b,
	0x65, 0xa9, 0xf8, 0x8e, 0xd2, 0xf2, 0xaf, 0xfe, 0x4d, 0xd0, 0x4f, 0xdc, 0x60, 0xc0, 0x7a, 0x7e,
	0xed, 0x8d, 0x1b, 0x53, 0xad, 0x52, 0xcf, 0x72, 0x18, 0xef, 0xdd, 0xda, 0x1d, 0x8d, 0x1c, 0x5b,
	0x65, 0xf0, 0x05, 0x1e, 0x4b, 0xca, 0x92, 0xb5, 0x1f, 0x07, 0x91, 0xeb, 0x3d, 0x8a, 0x68, 0xe3,
	0x73, 0x34, 0x17, 0x23, 0x68, 0x0c, 0x52, 0x9c, 0xf0, 0x5b, 0x41, 0xc7, 0xf4, 0x3d, 0xe0, 0xa6,
	0xe9, 0x69, 0x94, 0x88, 0xfe, 0x91, 0x9c, 0xa3, 0x2e, 0xb4, 0x5c, 0xcf, 0x4b, 0x70, 0x9a, 0xf2,
	0xf4, 0x23, 0xa6, 0xe8, 0x3a, 0xcc, 0x1d, 0xbb, 0x69, 0x86, 0x93, 0x5e, 0x18, 0x79, 0xb8, 0xe7,
	0xc7, 0xa2, 0x1f, 0xc3, 0xa8, 0xbb, 0x91, 0x87, 0x77, 0xe2, 0x8d, 0xaf, 0xe6, 0xc0, 0xba, 0x77,
	0x88, 0xc3, 0xec, 0xb1, 0x1b, 0xba, 0x87, 0x38, 0x41, 0xb7, 0xc0, 0xa0, 0x5d, 0xdd, 0xad, 0xdd,
	0x3d, 0x24, 0xbc, 0xa7, 0x74, 0x7a, 0x57, 0x90, 0x1a, 0xf7, 0xac, 0x25, 0x6c, 0xff, 0x07, 0x6d,
	0x40, 0x6b, 0x2f, 0x8b, 0x62, 0xc2, 0x74, 0x49, 0x65, 0xa2, 0x7d, 0xdf, 0x0a, 0x9e, 0xdb, 0x60,
	0xca, 0x46, 0x25, 0x12, 0x6f, 0x01, 0xb5, 0x75, 0x59, 0xcd, 0x27, 0x7b, 0x8d, 0x92, 0x4f, 0xed,
	0x3e, 0x56, 0xf3, 0xc9, 0x76, 0xa1, 0xe4, 0x53, 0x1b, 0x88, 0x15, 0x7c, 0x77, 0x00, 0xf2, 0x17,
	0x31, 0x5a, 0x2c, 0x28, 0xca, 0x1f, 0x48, 0xd5, 0x9c, 0xf9, 0xc3, 0x50, 0x72, 0x16, 0xde, 0x8a,
	0xd5, 0x9c, 0xf9, 0x0b, 0x4c, 0x72, 0x16, 0x1e, 0x65, 0xd3, 0xb4, 0xa5, 0xa5, 0xbe, 0xa8, 0x2d,
	0x8f, 0xce, 0x69, 0xda, 0x16, 0x38, 0x0b, 0x9d, 0xc4, 0x69, 0xda, 0x16, 0x38, 0x0b, 0x3d, 0xbd,
	0x0a, 0xce, 0x6d, 0xb8, 0x34, 0x56, 0xad, 0xd1, 0x6a, 0x41, 0xe9, 0xe2, 0xcd, 0xaa, 0x96, 0x33,
	0x76, 0x0f, 0xa5, 0x9c, 0xb2, 0x1b, 0x5a, 0x2d, 0x67, 0xac, 0xb2, 0x49, 0x39, 0x65, 0x35, 0xaf,
	0x42, 0xce, 0x16, 0xcc, 0x8f, 0x96, 0x32, 0xb4, 0x22, 0x72, 0xe1, 0x78, 0x8d, 0xab, 0x90, 0xf2,
	0x04, 0x96, 0xcb, 0x53, 0x0c, 0x5a, 0x9b, 0x96, 0x81, 0x2a, 0x24, 0x7e, 0x22, 0x5a, 0x15, 0x7c,
	0x37, 0xba, 0x5c, 0x86, 0x51, 0x35, 0xff, 0x2d, 0x30, 0x44, 0xc7, 0x54, 0x66, 0x07, 0xa5, 0x85,
	0x5a, 0xcd, 0x25, 0x9a, 0x8a, 0x92, 0x4b, 0xe9, 0x32, 0x56, 0x73, 0x89, 0x06, 0x5d, 0x9e, 0x89,
	0xf2, 0x8e, 0xdd, 0xb4, 0x88, 0x52, 0xbe, 0xfb, 0x47, 0x22, 0xaa, 0xf8, 0x22, 0x98, 0x16, 0x51,
	0x65, 0x72, 0xca, 0x1e, 0x5e, 0xd3, 0x22, 0xaa, 0x4c, 0x4e, 0xd9, 0x0b, 0x65, 0x9a, 0x5d, 0xca,
	0xeb, 0x7b, 0xc4, 0xae, 0xe2, 0xbb, 0x7c, 0x9a, 0x5d, 0x65, 0x72, 0xca, 0x1a, 0x12, 0xd3, 0xec,
	0x2a, 0x93, 0x53, 0xd6, 0x27, 0xa8, 0x90, 0xf3, 0x10, 0xd0, 0xf8, 0x5f, 0x82, 0xe8, 0x7f, 0x05,
	0x85, 0x46, 0xfe, 0x2d, 0x9c, 0x54, 0x17, 0x78, 0x69, 0x55, 0xea, 0x42, 0x5e, 0x6c, 0xcb, 0xf9,
	0x0e, 0x9a, 0x94, 0xf8, 0xe1, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x76, 0xff, 0x2b, 0x48, 0xf9,
	0x1c, 0x00, 0x00,
}
