// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.6.1
// source: dns.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DNSStartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *DNSStartReq) Reset() {
	*x = DNSStartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNSStartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSStartReq) ProtoMessage() {}

func (x *DNSStartReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSStartReq.ProtoReflect.Descriptor instead.
func (*DNSStartReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{0}
}

func (x *DNSStartReq) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type DNSStopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DNSStopReq) Reset() {
	*x = DNSStopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNSStopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSStopReq) ProtoMessage() {}

func (x *DNSStopReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSStopReq.ProtoReflect.Descriptor instead.
func (*DNSStopReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{1}
}

type UpdateGlobalConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogEnable        bool     `protobuf:"varint,1,opt,name=log_enable,json=logEnable,proto3" json:"log_enable,omitempty"`
	DnssecEnable     bool     `protobuf:"varint,2,opt,name=dnssec_enable,json=dnssecEnable,proto3" json:"dnssec_enable,omitempty"`
	Ttl              uint32   `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	BlackholeEnable  bool     `protobuf:"varint,4,opt,name=blackhole_enable,json=blackholeEnable,proto3" json:"blackhole_enable,omitempty"`
	Blackholes       []string `protobuf:"bytes,5,rep,name=blackholes,proto3" json:"blackholes,omitempty"`
	RecursionEnable  bool     `protobuf:"varint,6,opt,name=recursion_enable,json=recursionEnable,proto3" json:"recursion_enable,omitempty"`
	RecursiveClients uint32   `protobuf:"varint,7,opt,name=recursive_clients,json=recursiveClients,proto3" json:"recursive_clients,omitempty"`
	TransferPort     uint32   `protobuf:"varint,8,opt,name=transfer_port,json=transferPort,proto3" json:"transfer_port,omitempty"`
	UpdateModel      string   `protobuf:"bytes,9,opt,name=update_model,json=updateModel,proto3" json:"update_model,omitempty"`
}

func (x *UpdateGlobalConfigReq) Reset() {
	*x = UpdateGlobalConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGlobalConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGlobalConfigReq) ProtoMessage() {}

func (x *UpdateGlobalConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGlobalConfigReq.ProtoReflect.Descriptor instead.
func (*UpdateGlobalConfigReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateGlobalConfigReq) GetLogEnable() bool {
	if x != nil {
		return x.LogEnable
	}
	return false
}

func (x *UpdateGlobalConfigReq) GetDnssecEnable() bool {
	if x != nil {
		return x.DnssecEnable
	}
	return false
}

func (x *UpdateGlobalConfigReq) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *UpdateGlobalConfigReq) GetBlackholeEnable() bool {
	if x != nil {
		return x.BlackholeEnable
	}
	return false
}

func (x *UpdateGlobalConfigReq) GetBlackholes() []string {
	if x != nil {
		return x.Blackholes
	}
	return nil
}

func (x *UpdateGlobalConfigReq) GetRecursionEnable() bool {
	if x != nil {
		return x.RecursionEnable
	}
	return false
}

func (x *UpdateGlobalConfigReq) GetRecursiveClients() uint32 {
	if x != nil {
		return x.RecursiveClients
	}
	return 0
}

func (x *UpdateGlobalConfigReq) GetTransferPort() uint32 {
	if x != nil {
		return x.TransferPort
	}
	return 0
}

func (x *UpdateGlobalConfigReq) GetUpdateModel() string {
	if x != nil {
		return x.UpdateModel
	}
	return ""
}

type Acl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ips  []string `protobuf:"bytes,3,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *Acl) Reset() {
	*x = Acl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Acl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acl) ProtoMessage() {}

func (x *Acl) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acl.ProtoReflect.Descriptor instead.
func (*Acl) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{3}
}

func (x *Acl) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Acl) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Acl) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

type CreateAclReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acl *Acl `protobuf:"bytes,1,opt,name=acl,proto3" json:"acl,omitempty"`
}

func (x *CreateAclReq) Reset() {
	*x = CreateAclReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAclReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAclReq) ProtoMessage() {}

func (x *CreateAclReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAclReq.ProtoReflect.Descriptor instead.
func (*CreateAclReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAclReq) GetAcl() *Acl {
	if x != nil {
		return x.Acl
	}
	return nil
}

type BatchCreateAclReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acls []*Acl `protobuf:"bytes,1,rep,name=acls,proto3" json:"acls,omitempty"`
}

func (x *BatchCreateAclReq) Reset() {
	*x = BatchCreateAclReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateAclReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateAclReq) ProtoMessage() {}

func (x *BatchCreateAclReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateAclReq.ProtoReflect.Descriptor instead.
func (*BatchCreateAclReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{5}
}

func (x *BatchCreateAclReq) GetAcls() []*Acl {
	if x != nil {
		return x.Acls
	}
	return nil
}

type UpdateAclReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acl *Acl `protobuf:"bytes,1,opt,name=acl,proto3" json:"acl,omitempty"`
}

func (x *UpdateAclReq) Reset() {
	*x = UpdateAclReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAclReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAclReq) ProtoMessage() {}

func (x *UpdateAclReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAclReq.ProtoReflect.Descriptor instead.
func (*UpdateAclReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAclReq) GetAcl() *Acl {
	if x != nil {
		return x.Acl
	}
	return nil
}

type DeleteAclReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAclReq) Reset() {
	*x = DeleteAclReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAclReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAclReq) ProtoMessage() {}

func (x *DeleteAclReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAclReq.ProtoReflect.Descriptor instead.
func (*DeleteAclReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteAclReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AuthZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View    string   `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ttl     uint32   `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Role    string   `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	Masters []string `protobuf:"bytes,5,rep,name=masters,proto3" json:"masters,omitempty"`
	Slaves  []string `protobuf:"bytes,6,rep,name=slaves,proto3" json:"slaves,omitempty"`
}

func (x *AuthZone) Reset() {
	*x = AuthZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthZone) ProtoMessage() {}

func (x *AuthZone) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthZone.ProtoReflect.Descriptor instead.
func (*AuthZone) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{8}
}

func (x *AuthZone) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

func (x *AuthZone) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuthZone) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *AuthZone) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AuthZone) GetMasters() []string {
	if x != nil {
		return x.Masters
	}
	return nil
}

func (x *AuthZone) GetSlaves() []string {
	if x != nil {
		return x.Slaves
	}
	return nil
}

type CreateAuthZoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthZone *AuthZone `protobuf:"bytes,1,opt,name=authZone,proto3" json:"authZone,omitempty"`
}

func (x *CreateAuthZoneReq) Reset() {
	*x = CreateAuthZoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthZoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthZoneReq) ProtoMessage() {}

func (x *CreateAuthZoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthZoneReq.ProtoReflect.Descriptor instead.
func (*CreateAuthZoneReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{9}
}

func (x *CreateAuthZoneReq) GetAuthZone() *AuthZone {
	if x != nil {
		return x.AuthZone
	}
	return nil
}

type UpdateAuthZoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthZone *AuthZone `protobuf:"bytes,1,opt,name=authZone,proto3" json:"authZone,omitempty"`
}

func (x *UpdateAuthZoneReq) Reset() {
	*x = UpdateAuthZoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthZoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthZoneReq) ProtoMessage() {}

func (x *UpdateAuthZoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthZoneReq.ProtoReflect.Descriptor instead.
func (*UpdateAuthZoneReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAuthZoneReq) GetAuthZone() *AuthZone {
	if x != nil {
		return x.AuthZone
	}
	return nil
}

type DeleteAuthZoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View string `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteAuthZoneReq) Reset() {
	*x = DeleteAuthZoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthZoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthZoneReq) ProtoMessage() {}

func (x *DeleteAuthZoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthZoneReq.ProtoReflect.Descriptor instead.
func (*DeleteAuthZoneReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteAuthZoneReq) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

func (x *DeleteAuthZoneReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateAuthZoneAuthRRsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthZone    *AuthZone     `protobuf:"bytes,1,opt,name=authZone,proto3" json:"authZone,omitempty"`
	AuthZoneRrs []*AuthZoneRR `protobuf:"bytes,2,rep,name=auth_zone_rrs,json=authZoneRrs,proto3" json:"auth_zone_rrs,omitempty"`
}

func (x *CreateAuthZoneAuthRRsReq) Reset() {
	*x = CreateAuthZoneAuthRRsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthZoneAuthRRsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthZoneAuthRRsReq) ProtoMessage() {}

func (x *CreateAuthZoneAuthRRsReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthZoneAuthRRsReq.ProtoReflect.Descriptor instead.
func (*CreateAuthZoneAuthRRsReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{12}
}

func (x *CreateAuthZoneAuthRRsReq) GetAuthZone() *AuthZone {
	if x != nil {
		return x.AuthZone
	}
	return nil
}

func (x *CreateAuthZoneAuthRRsReq) GetAuthZoneRrs() []*AuthZoneRR {
	if x != nil {
		return x.AuthZoneRrs
	}
	return nil
}

type UpdateAuthZoneAXFRReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthZones   []*AuthZone   `protobuf:"bytes,1,rep,name=authZones,proto3" json:"authZones,omitempty"`
	AuthZoneRrs []*AuthZoneRR `protobuf:"bytes,2,rep,name=auth_zone_rrs,json=authZoneRrs,proto3" json:"auth_zone_rrs,omitempty"`
}

func (x *UpdateAuthZoneAXFRReq) Reset() {
	*x = UpdateAuthZoneAXFRReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthZoneAXFRReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthZoneAXFRReq) ProtoMessage() {}

func (x *UpdateAuthZoneAXFRReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthZoneAXFRReq.ProtoReflect.Descriptor instead.
func (*UpdateAuthZoneAXFRReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateAuthZoneAXFRReq) GetAuthZones() []*AuthZone {
	if x != nil {
		return x.AuthZones
	}
	return nil
}

func (x *UpdateAuthZoneAXFRReq) GetAuthZoneRrs() []*AuthZoneRR {
	if x != nil {
		return x.AuthZoneRrs
	}
	return nil
}

type UpdateAuthZoneIXFRReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldAuthZoneRrs []*AuthZoneRR `protobuf:"bytes,1,rep,name=old_auth_zone_rrs,json=oldAuthZoneRrs,proto3" json:"old_auth_zone_rrs,omitempty"`
	NewAuthZoneRrs []*AuthZoneRR `protobuf:"bytes,2,rep,name=new_auth_zone_rrs,json=newAuthZoneRrs,proto3" json:"new_auth_zone_rrs,omitempty"`
}

func (x *UpdateAuthZoneIXFRReq) Reset() {
	*x = UpdateAuthZoneIXFRReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthZoneIXFRReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthZoneIXFRReq) ProtoMessage() {}

func (x *UpdateAuthZoneIXFRReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthZoneIXFRReq.ProtoReflect.Descriptor instead.
func (*UpdateAuthZoneIXFRReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateAuthZoneIXFRReq) GetOldAuthZoneRrs() []*AuthZoneRR {
	if x != nil {
		return x.OldAuthZoneRrs
	}
	return nil
}

func (x *UpdateAuthZoneIXFRReq) GetNewAuthZoneRrs() []*AuthZoneRR {
	if x != nil {
		return x.NewAuthZoneRrs
	}
	return nil
}

type AuthZoneRR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View    string `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	Zone    string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type    string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Ttl     uint32 `protobuf:"varint,5,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Rdata   string `protobuf:"bytes,6,opt,name=rdata,proto3" json:"rdata,omitempty"`
	ViewKey string `protobuf:"bytes,7,opt,name=view_key,json=viewKey,proto3" json:"view_key,omitempty"`
}

func (x *AuthZoneRR) Reset() {
	*x = AuthZoneRR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthZoneRR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthZoneRR) ProtoMessage() {}

func (x *AuthZoneRR) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthZoneRR.ProtoReflect.Descriptor instead.
func (*AuthZoneRR) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{15}
}

func (x *AuthZoneRR) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

func (x *AuthZoneRR) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *AuthZoneRR) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuthZoneRR) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AuthZoneRR) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *AuthZoneRR) GetRdata() string {
	if x != nil {
		return x.Rdata
	}
	return ""
}

func (x *AuthZoneRR) GetViewKey() string {
	if x != nil {
		return x.ViewKey
	}
	return ""
}

type BatchCreateAuthRRsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthZoneRrs []*AuthZoneRR `protobuf:"bytes,1,rep,name=auth_zone_rrs,json=authZoneRrs,proto3" json:"auth_zone_rrs,omitempty"`
	Soa         *AuthZoneRR   `protobuf:"bytes,2,opt,name=soa,proto3" json:"soa,omitempty"`
}

func (x *BatchCreateAuthRRsReq) Reset() {
	*x = BatchCreateAuthRRsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateAuthRRsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateAuthRRsReq) ProtoMessage() {}

func (x *BatchCreateAuthRRsReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateAuthRRsReq.ProtoReflect.Descriptor instead.
func (*BatchCreateAuthRRsReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{16}
}

func (x *BatchCreateAuthRRsReq) GetAuthZoneRrs() []*AuthZoneRR {
	if x != nil {
		return x.AuthZoneRrs
	}
	return nil
}

func (x *BatchCreateAuthRRsReq) GetSoa() *AuthZoneRR {
	if x != nil {
		return x.Soa
	}
	return nil
}

type CreateAuthRRReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rr  *AuthZoneRR `protobuf:"bytes,1,opt,name=rr,proto3" json:"rr,omitempty"`
	Soa *AuthZoneRR `protobuf:"bytes,2,opt,name=soa,proto3" json:"soa,omitempty"`
}

func (x *CreateAuthRRReq) Reset() {
	*x = CreateAuthRRReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthRRReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthRRReq) ProtoMessage() {}

func (x *CreateAuthRRReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthRRReq.ProtoReflect.Descriptor instead.
func (*CreateAuthRRReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{17}
}

func (x *CreateAuthRRReq) GetRr() *AuthZoneRR {
	if x != nil {
		return x.Rr
	}
	return nil
}

func (x *CreateAuthRRReq) GetSoa() *AuthZoneRR {
	if x != nil {
		return x.Soa
	}
	return nil
}

type UpdateAuthRRReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldRr *AuthZoneRR `protobuf:"bytes,1,opt,name=old_rr,json=oldRr,proto3" json:"old_rr,omitempty"`
	NewRr *AuthZoneRR `protobuf:"bytes,2,opt,name=new_rr,json=newRr,proto3" json:"new_rr,omitempty"`
	Soa   *AuthZoneRR `protobuf:"bytes,3,opt,name=soa,proto3" json:"soa,omitempty"`
}

func (x *UpdateAuthRRReq) Reset() {
	*x = UpdateAuthRRReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthRRReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthRRReq) ProtoMessage() {}

func (x *UpdateAuthRRReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthRRReq.ProtoReflect.Descriptor instead.
func (*UpdateAuthRRReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateAuthRRReq) GetOldRr() *AuthZoneRR {
	if x != nil {
		return x.OldRr
	}
	return nil
}

func (x *UpdateAuthRRReq) GetNewRr() *AuthZoneRR {
	if x != nil {
		return x.NewRr
	}
	return nil
}

func (x *UpdateAuthRRReq) GetSoa() *AuthZoneRR {
	if x != nil {
		return x.Soa
	}
	return nil
}

type DeleteAuthRRReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rr  *AuthZoneRR `protobuf:"bytes,1,opt,name=rr,proto3" json:"rr,omitempty"`
	Soa *AuthZoneRR `protobuf:"bytes,2,opt,name=soa,proto3" json:"soa,omitempty"`
}

func (x *DeleteAuthRRReq) Reset() {
	*x = DeleteAuthRRReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthRRReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthRRReq) ProtoMessage() {}

func (x *DeleteAuthRRReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthRRReq.ProtoReflect.Descriptor instead.
func (*DeleteAuthRRReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteAuthRRReq) GetRr() *AuthZoneRR {
	if x != nil {
		return x.Rr
	}
	return nil
}

func (x *DeleteAuthRRReq) GetSoa() *AuthZoneRR {
	if x != nil {
		return x.Soa
	}
	return nil
}

type CreateViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Priority     uint32          `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Dns64        string          `protobuf:"bytes,4,opt,name=dns64,proto3" json:"dns64,omitempty"`
	Key          string          `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	Acls         []string        `protobuf:"bytes,6,rep,name=acls,proto3" json:"acls,omitempty"`
	Recursion    bool            `protobuf:"varint,7,opt,name=recursion,proto3" json:"recursion,omitempty"`
	ViewPriority []*ViewPriority `protobuf:"bytes,8,rep,name=view_priority,json=viewPriority,proto3" json:"view_priority,omitempty"`
}

func (x *CreateViewReq) Reset() {
	*x = CreateViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateViewReq) ProtoMessage() {}

func (x *CreateViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateViewReq.ProtoReflect.Descriptor instead.
func (*CreateViewReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{20}
}

func (x *CreateViewReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateViewReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateViewReq) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateViewReq) GetDns64() string {
	if x != nil {
		return x.Dns64
	}
	return ""
}

func (x *CreateViewReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CreateViewReq) GetAcls() []string {
	if x != nil {
		return x.Acls
	}
	return nil
}

func (x *CreateViewReq) GetRecursion() bool {
	if x != nil {
		return x.Recursion
	}
	return false
}

func (x *CreateViewReq) GetViewPriority() []*ViewPriority {
	if x != nil {
		return x.ViewPriority
	}
	return nil
}

type ViewPriority struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Priority uint32 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *ViewPriority) Reset() {
	*x = ViewPriority{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewPriority) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewPriority) ProtoMessage() {}

func (x *ViewPriority) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewPriority.ProtoReflect.Descriptor instead.
func (*ViewPriority) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{21}
}

func (x *ViewPriority) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ViewPriority) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type UpdateViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Priority     uint32          `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	Dns64        string          `protobuf:"bytes,3,opt,name=dns64,proto3" json:"dns64,omitempty"`
	Acls         []string        `protobuf:"bytes,4,rep,name=acls,proto3" json:"acls,omitempty"`
	Recursion    bool            `protobuf:"varint,5,opt,name=recursion,proto3" json:"recursion,omitempty"`
	ViewPriority []*ViewPriority `protobuf:"bytes,6,rep,name=view_priority,json=viewPriority,proto3" json:"view_priority,omitempty"`
}

func (x *UpdateViewReq) Reset() {
	*x = UpdateViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateViewReq) ProtoMessage() {}

func (x *UpdateViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateViewReq.ProtoReflect.Descriptor instead.
func (*UpdateViewReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateViewReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateViewReq) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *UpdateViewReq) GetDns64() string {
	if x != nil {
		return x.Dns64
	}
	return ""
}

func (x *UpdateViewReq) GetAcls() []string {
	if x != nil {
		return x.Acls
	}
	return nil
}

func (x *UpdateViewReq) GetRecursion() bool {
	if x != nil {
		return x.Recursion
	}
	return false
}

func (x *UpdateViewReq) GetViewPriority() []*ViewPriority {
	if x != nil {
		return x.ViewPriority
	}
	return nil
}

type DeleteViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ViewPriority []*ViewPriority `protobuf:"bytes,2,rep,name=view_priority,json=viewPriority,proto3" json:"view_priority,omitempty"`
}

func (x *DeleteViewReq) Reset() {
	*x = DeleteViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteViewReq) ProtoMessage() {}

func (x *DeleteViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteViewReq.ProtoReflect.Descriptor instead.
func (*DeleteViewReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteViewReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteViewReq) GetViewPriority() []*ViewPriority {
	if x != nil {
		return x.ViewPriority
	}
	return nil
}

type CreateUrlRedirectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View    string `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	Domain  string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Url     string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	IsHttps bool   `protobuf:"varint,4,opt,name=is_https,json=isHttps,proto3" json:"is_https,omitempty"`
	Key     []byte `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	Crt     []byte `protobuf:"bytes,6,opt,name=crt,proto3" json:"crt,omitempty"`
}

func (x *CreateUrlRedirectReq) Reset() {
	*x = CreateUrlRedirectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUrlRedirectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUrlRedirectReq) ProtoMessage() {}

func (x *CreateUrlRedirectReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUrlRedirectReq.ProtoReflect.Descriptor instead.
func (*CreateUrlRedirectReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{24}
}

func (x *CreateUrlRedirectReq) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

func (x *CreateUrlRedirectReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CreateUrlRedirectReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateUrlRedirectReq) GetIsHttps() bool {
	if x != nil {
		return x.IsHttps
	}
	return false
}

func (x *CreateUrlRedirectReq) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *CreateUrlRedirectReq) GetCrt() []byte {
	if x != nil {
		return x.Crt
	}
	return nil
}

type UpdateUrlRedirectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View    string `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	Domain  string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Url     string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	IsHttps bool   `protobuf:"varint,4,opt,name=is_https,json=isHttps,proto3" json:"is_https,omitempty"`
}

func (x *UpdateUrlRedirectReq) Reset() {
	*x = UpdateUrlRedirectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUrlRedirectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUrlRedirectReq) ProtoMessage() {}

func (x *UpdateUrlRedirectReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUrlRedirectReq.ProtoReflect.Descriptor instead.
func (*UpdateUrlRedirectReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateUrlRedirectReq) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

func (x *UpdateUrlRedirectReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *UpdateUrlRedirectReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdateUrlRedirectReq) GetIsHttps() bool {
	if x != nil {
		return x.IsHttps
	}
	return false
}

type DeleteUrlRedirectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View    string `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	Domain  string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	IsHttps bool   `protobuf:"varint,3,opt,name=is_https,json=isHttps,proto3" json:"is_https,omitempty"`
}

func (x *DeleteUrlRedirectReq) Reset() {
	*x = DeleteUrlRedirectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUrlRedirectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUrlRedirectReq) ProtoMessage() {}

func (x *DeleteUrlRedirectReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUrlRedirectReq.ProtoReflect.Descriptor instead.
func (*DeleteUrlRedirectReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteUrlRedirectReq) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

func (x *DeleteUrlRedirectReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DeleteUrlRedirectReq) GetIsHttps() bool {
	if x != nil {
		return x.IsHttps
	}
	return false
}

type Redirection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View         string `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RrType       string `protobuf:"bytes,3,opt,name=rr_type,json=rrType,proto3" json:"rr_type,omitempty"`
	Ttl          uint32 `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Rdata        string `protobuf:"bytes,5,opt,name=rdata,proto3" json:"rdata,omitempty"`
	RedirectType string `protobuf:"bytes,6,opt,name=redirect_type,json=redirectType,proto3" json:"redirect_type,omitempty"`
}

func (x *Redirection) Reset() {
	*x = Redirection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Redirection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redirection) ProtoMessage() {}

func (x *Redirection) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redirection.ProtoReflect.Descriptor instead.
func (*Redirection) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{27}
}

func (x *Redirection) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

func (x *Redirection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Redirection) GetRrType() string {
	if x != nil {
		return x.RrType
	}
	return ""
}

func (x *Redirection) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *Redirection) GetRdata() string {
	if x != nil {
		return x.Rdata
	}
	return ""
}

func (x *Redirection) GetRedirectType() string {
	if x != nil {
		return x.RedirectType
	}
	return ""
}

type CreateRedirectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Redirection *Redirection `protobuf:"bytes,1,opt,name=redirection,proto3" json:"redirection,omitempty"`
}

func (x *CreateRedirectionReq) Reset() {
	*x = CreateRedirectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRedirectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRedirectionReq) ProtoMessage() {}

func (x *CreateRedirectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRedirectionReq.ProtoReflect.Descriptor instead.
func (*CreateRedirectionReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{28}
}

func (x *CreateRedirectionReq) GetRedirection() *Redirection {
	if x != nil {
		return x.Redirection
	}
	return nil
}

type UpdateRedirectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldRedirection *Redirection `protobuf:"bytes,1,opt,name=old_redirection,json=oldRedirection,proto3" json:"old_redirection,omitempty"`
	NewRedirection *Redirection `protobuf:"bytes,2,opt,name=new_redirection,json=newRedirection,proto3" json:"new_redirection,omitempty"`
}

func (x *UpdateRedirectionReq) Reset() {
	*x = UpdateRedirectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRedirectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRedirectionReq) ProtoMessage() {}

func (x *UpdateRedirectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRedirectionReq.ProtoReflect.Descriptor instead.
func (*UpdateRedirectionReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateRedirectionReq) GetOldRedirection() *Redirection {
	if x != nil {
		return x.OldRedirection
	}
	return nil
}

func (x *UpdateRedirectionReq) GetNewRedirection() *Redirection {
	if x != nil {
		return x.NewRedirection
	}
	return nil
}

type DeleteRedirectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Redirection *Redirection `protobuf:"bytes,1,opt,name=redirection,proto3" json:"redirection,omitempty"`
}

func (x *DeleteRedirectionReq) Reset() {
	*x = DeleteRedirectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRedirectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRedirectionReq) ProtoMessage() {}

func (x *DeleteRedirectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRedirectionReq.ProtoReflect.Descriptor instead.
func (*DeleteRedirectionReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteRedirectionReq) GetRedirection() *Redirection {
	if x != nil {
		return x.Redirection
	}
	return nil
}

type CreateForwardZoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View         string   `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ForwardStyle string   `protobuf:"bytes,3,opt,name=forward_style,json=forwardStyle,proto3" json:"forward_style,omitempty"`
	Addresses    []string `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *CreateForwardZoneReq) Reset() {
	*x = CreateForwardZoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateForwardZoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateForwardZoneReq) ProtoMessage() {}

func (x *CreateForwardZoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateForwardZoneReq.ProtoReflect.Descriptor instead.
func (*CreateForwardZoneReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{31}
}

func (x *CreateForwardZoneReq) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

func (x *CreateForwardZoneReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateForwardZoneReq) GetForwardStyle() string {
	if x != nil {
		return x.ForwardStyle
	}
	return ""
}

func (x *CreateForwardZoneReq) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type UpdateForwardZoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View         string   `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ForwardStyle string   `protobuf:"bytes,3,opt,name=forward_style,json=forwardStyle,proto3" json:"forward_style,omitempty"`
	Addresses    []string `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *UpdateForwardZoneReq) Reset() {
	*x = UpdateForwardZoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateForwardZoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateForwardZoneReq) ProtoMessage() {}

func (x *UpdateForwardZoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateForwardZoneReq.ProtoReflect.Descriptor instead.
func (*UpdateForwardZoneReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateForwardZoneReq) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

func (x *UpdateForwardZoneReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateForwardZoneReq) GetForwardStyle() string {
	if x != nil {
		return x.ForwardStyle
	}
	return ""
}

func (x *UpdateForwardZoneReq) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type DeleteForwardZoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View string `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteForwardZoneReq) Reset() {
	*x = DeleteForwardZoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteForwardZoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteForwardZoneReq) ProtoMessage() {}

func (x *DeleteForwardZoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteForwardZoneReq.ProtoReflect.Descriptor instead.
func (*DeleteForwardZoneReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteForwardZoneReq) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

func (x *DeleteForwardZoneReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FlushForwardZoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewForwardZones []*FlushForwardZoneReqForwardZone `protobuf:"bytes,1,rep,name=new_forward_zones,json=newForwardZones,proto3" json:"new_forward_zones,omitempty"`
	OldForwardZones []*FlushForwardZoneReqForwardZone `protobuf:"bytes,2,rep,name=old_forward_zones,json=oldForwardZones,proto3" json:"old_forward_zones,omitempty"`
}

func (x *FlushForwardZoneReq) Reset() {
	*x = FlushForwardZoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushForwardZoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushForwardZoneReq) ProtoMessage() {}

func (x *FlushForwardZoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushForwardZoneReq.ProtoReflect.Descriptor instead.
func (*FlushForwardZoneReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{34}
}

func (x *FlushForwardZoneReq) GetNewForwardZones() []*FlushForwardZoneReqForwardZone {
	if x != nil {
		return x.NewForwardZones
	}
	return nil
}

func (x *FlushForwardZoneReq) GetOldForwardZones() []*FlushForwardZoneReqForwardZone {
	if x != nil {
		return x.OldForwardZones
	}
	return nil
}

type UploadLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	User         string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Password     string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Address      string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	MasterNodeIp string `protobuf:"bytes,5,opt,name=master_node_ip,json=masterNodeIp,proto3" json:"master_node_ip,omitempty"`
}

func (x *UploadLogReq) Reset() {
	*x = UploadLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadLogReq) ProtoMessage() {}

func (x *UploadLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadLogReq.ProtoReflect.Descriptor instead.
func (*UploadLogReq) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{35}
}

func (x *UploadLogReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UploadLogReq) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *UploadLogReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UploadLogReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UploadLogReq) GetMasterNodeIp() string {
	if x != nil {
		return x.MasterNodeIp
	}
	return ""
}

type FlushForwardZoneReqForwardZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View         string   `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ForwardStyle string   `protobuf:"bytes,3,opt,name=forward_style,json=forwardStyle,proto3" json:"forward_style,omitempty"`
	ForwardIps   []string `protobuf:"bytes,4,rep,name=forward_ips,json=forwardIps,proto3" json:"forward_ips,omitempty"`
}

func (x *FlushForwardZoneReqForwardZone) Reset() {
	*x = FlushForwardZoneReqForwardZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dns_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushForwardZoneReqForwardZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushForwardZoneReqForwardZone) ProtoMessage() {}

func (x *FlushForwardZoneReqForwardZone) ProtoReflect() protoreflect.Message {
	mi := &file_dns_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushForwardZoneReqForwardZone.ProtoReflect.Descriptor instead.
func (*FlushForwardZoneReqForwardZone) Descriptor() ([]byte, []int) {
	return file_dns_proto_rawDescGZIP(), []int{34, 0}
}

func (x *FlushForwardZoneReqForwardZone) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

func (x *FlushForwardZoneReqForwardZone) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlushForwardZoneReqForwardZone) GetForwardStyle() string {
	if x != nil {
		return x.ForwardStyle
	}
	return ""
}

func (x *FlushForwardZoneReqForwardZone) GetForwardIps() []string {
	if x != nil {
		return x.ForwardIps
	}
	return nil
}

var File_dns_proto protoreflect.FileDescriptor

var file_dns_proto_rawDesc = []byte{
	0x0a, 0x09, 0x64, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x12, 0x64, 0x64, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x0b, 0x44, 0x4e, 0x53, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x0c, 0x0a,
	0x0a, 0x44, 0x4e, 0x53, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x22, 0xd8, 0x02, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6e, 0x73, 0x73, 0x65, 0x63, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x6e, 0x73,
	0x73, 0x65, 0x63, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x68, 0x6f, 0x6c, 0x65,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x68,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6c, 0x61, 0x63,
	0x6b, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x65,
	0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x3b, 0x0a, 0x03, 0x41, 0x63, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x69, 0x70, 0x73, 0x22, 0x2c, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x03, 0x61, 0x63, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6c, 0x52, 0x03, 0x61, 0x63,
	0x6c, 0x22, 0x33, 0x0a, 0x11, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6c,
	0x52, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x22, 0x2c, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x03, 0x61, 0x63, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6c, 0x52,
	0x03, 0x61, 0x63, 0x6c, 0x22, 0x1e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x61,
	0x76, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x61, 0x76, 0x65,
	0x73, 0x22, 0x40, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5a, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5a,
	0x6f, 0x6e, 0x65, 0x22, 0x40, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x08, 0x61, 0x75, 0x74,
	0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0x3b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x5a, 0x6f, 0x6e, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x52, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2b,
	0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e,
	0x65, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x35, 0x0a, 0x0d, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x72, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x52, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x72, 0x73, 0x22, 0x7d, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x5a, 0x6f, 0x6e, 0x65, 0x41, 0x58, 0x46, 0x52, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0d, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x72, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f,
	0x6e, 0x65, 0x52, 0x52, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x72,
	0x73, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x58, 0x46, 0x52, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x11, 0x6f,
	0x6c, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x72, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x52, 0x52, 0x0e, 0x6f, 0x6c, 0x64, 0x41, 0x75,
	0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x72, 0x73, 0x12, 0x3c, 0x0a, 0x11, 0x6e, 0x65, 0x77,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x72, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x52, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x41, 0x75, 0x74, 0x68,
	0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x72, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68,
	0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x52, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f,
	0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19,
	0x0a, 0x08, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x22, 0x73, 0x0a, 0x15, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x52, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x35, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x72, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x52, 0x52, 0x0b, 0x61, 0x75,
	0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x03, 0x73, 0x6f, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x52, 0x52, 0x03, 0x73, 0x6f, 0x61, 0x22, 0x59,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x52, 0x52, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x02, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x52,
	0x52, 0x02, 0x72, 0x72, 0x12, 0x23, 0x0a, 0x03, 0x73, 0x6f, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f,
	0x6e, 0x65, 0x52, 0x52, 0x52, 0x03, 0x73, 0x6f, 0x61, 0x22, 0x8a, 0x01, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x52, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a,
	0x06, 0x6f, 0x6c, 0x64, 0x5f, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x52,
	0x52, 0x05, 0x6f, 0x6c, 0x64, 0x52, 0x72, 0x12, 0x28, 0x0a, 0x06, 0x6e, 0x65, 0x77, 0x5f, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x52, 0x52, 0x05, 0x6e, 0x65, 0x77, 0x52,
	0x72, 0x12, 0x23, 0x0a, 0x03, 0x73, 0x6f, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52,
	0x52, 0x52, 0x03, 0x73, 0x6f, 0x61, 0x22, 0x59, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x52, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x02, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x52, 0x52, 0x02, 0x72, 0x72, 0x12, 0x23, 0x0a, 0x03,
	0x73, 0x6f, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x52, 0x52, 0x03, 0x73, 0x6f,
	0x61, 0x22, 0xe3, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6e, 0x73, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x64, 0x6e, 0x73, 0x36, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x63, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a,
	0x0d, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x3a, 0x0a, 0x0c, 0x56, 0x69, 0x65, 0x77, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x22, 0xbd, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x6e, 0x73, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x6e, 0x73, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0d, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x22, 0x59, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x93,
	0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x68, 0x74, 0x74, 0x70,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x48, 0x74, 0x74, 0x70, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x63, 0x72, 0x74, 0x22, 0x6f, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x68, 0x74, 0x74, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x48, 0x74, 0x74, 0x70, 0x73, 0x22, 0x5d, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x48,
	0x74, 0x74, 0x70, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x4c, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x0b, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x90, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0f, 0x6f, 0x6c, 0x64,
	0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x0b, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xba, 0x02, 0x0a, 0x13, 0x46, 0x6c,
	0x75, 0x73, 0x68, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x52, 0x0a, 0x11, 0x6e, 0x65, 0x77, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x11, 0x6f, 0x6c, 0x64, 0x5f, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x0f, 0x6f, 0x6c, 0x64, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x1a, 0x7b, 0x0a, 0x0b, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x70, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x70, 0x32, 0x8e, 0x10, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x4e, 0x53, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x4e, 0x53,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32,
	0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x4e, 0x53, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x4e, 0x53, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x36, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x12,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x36, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x12,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6c, 0x12, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x38, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65,
	0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f,
	0x6e, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x52, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x52, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x48, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f,
	0x6e, 0x65, 0x41, 0x58, 0x46, 0x52, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x41, 0x58, 0x46,
	0x52, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x58, 0x46, 0x52,
	0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x58, 0x46, 0x52, 0x52, 0x65, 0x71, 0x1a, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e,
	0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x10,
	0x46, 0x6c, 0x75, 0x73, 0x68, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e, 0x65,
	0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x52, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x52, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x52,
	0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x52, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x52, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x52, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x12,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x52, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x52, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x36, 0x0a, 0x09, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x12, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x44, 0x49, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dns_proto_rawDescOnce sync.Once
	file_dns_proto_rawDescData = file_dns_proto_rawDesc
)

func file_dns_proto_rawDescGZIP() []byte {
	file_dns_proto_rawDescOnce.Do(func() {
		file_dns_proto_rawDescData = protoimpl.X.CompressGZIP(file_dns_proto_rawDescData)
	})
	return file_dns_proto_rawDescData
}

var file_dns_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_dns_proto_goTypes = []interface{}{
	(*DNSStartReq)(nil),                    // 0: proto.DNSStartReq
	(*DNSStopReq)(nil),                     // 1: proto.DNSStopReq
	(*UpdateGlobalConfigReq)(nil),          // 2: proto.UpdateGlobalConfigReq
	(*Acl)(nil),                            // 3: proto.Acl
	(*CreateAclReq)(nil),                   // 4: proto.CreateAclReq
	(*BatchCreateAclReq)(nil),              // 5: proto.BatchCreateAclReq
	(*UpdateAclReq)(nil),                   // 6: proto.UpdateAclReq
	(*DeleteAclReq)(nil),                   // 7: proto.DeleteAclReq
	(*AuthZone)(nil),                       // 8: proto.AuthZone
	(*CreateAuthZoneReq)(nil),              // 9: proto.CreateAuthZoneReq
	(*UpdateAuthZoneReq)(nil),              // 10: proto.UpdateAuthZoneReq
	(*DeleteAuthZoneReq)(nil),              // 11: proto.DeleteAuthZoneReq
	(*CreateAuthZoneAuthRRsReq)(nil),       // 12: proto.CreateAuthZoneAuthRRsReq
	(*UpdateAuthZoneAXFRReq)(nil),          // 13: proto.UpdateAuthZoneAXFRReq
	(*UpdateAuthZoneIXFRReq)(nil),          // 14: proto.UpdateAuthZoneIXFRReq
	(*AuthZoneRR)(nil),                     // 15: proto.AuthZoneRR
	(*BatchCreateAuthRRsReq)(nil),          // 16: proto.BatchCreateAuthRRsReq
	(*CreateAuthRRReq)(nil),                // 17: proto.CreateAuthRRReq
	(*UpdateAuthRRReq)(nil),                // 18: proto.UpdateAuthRRReq
	(*DeleteAuthRRReq)(nil),                // 19: proto.DeleteAuthRRReq
	(*CreateViewReq)(nil),                  // 20: proto.CreateViewReq
	(*ViewPriority)(nil),                   // 21: proto.ViewPriority
	(*UpdateViewReq)(nil),                  // 22: proto.UpdateViewReq
	(*DeleteViewReq)(nil),                  // 23: proto.DeleteViewReq
	(*CreateUrlRedirectReq)(nil),           // 24: proto.CreateUrlRedirectReq
	(*UpdateUrlRedirectReq)(nil),           // 25: proto.UpdateUrlRedirectReq
	(*DeleteUrlRedirectReq)(nil),           // 26: proto.DeleteUrlRedirectReq
	(*Redirection)(nil),                    // 27: proto.Redirection
	(*CreateRedirectionReq)(nil),           // 28: proto.CreateRedirectionReq
	(*UpdateRedirectionReq)(nil),           // 29: proto.UpdateRedirectionReq
	(*DeleteRedirectionReq)(nil),           // 30: proto.DeleteRedirectionReq
	(*CreateForwardZoneReq)(nil),           // 31: proto.CreateForwardZoneReq
	(*UpdateForwardZoneReq)(nil),           // 32: proto.UpdateForwardZoneReq
	(*DeleteForwardZoneReq)(nil),           // 33: proto.DeleteForwardZoneReq
	(*FlushForwardZoneReq)(nil),            // 34: proto.FlushForwardZoneReq
	(*UploadLogReq)(nil),                   // 35: proto.UploadLogReq
	(*FlushForwardZoneReqForwardZone)(nil), // 36: proto.FlushForwardZoneReq.forwardZone
	(*DDIResponse)(nil),                    // 37: proto.DDIResponse
}
var file_dns_proto_depIdxs = []int32{
	3,  // 0: proto.CreateAclReq.acl:type_name -> proto.Acl
	3,  // 1: proto.BatchCreateAclReq.acls:type_name -> proto.Acl
	3,  // 2: proto.UpdateAclReq.acl:type_name -> proto.Acl
	8,  // 3: proto.CreateAuthZoneReq.authZone:type_name -> proto.AuthZone
	8,  // 4: proto.UpdateAuthZoneReq.authZone:type_name -> proto.AuthZone
	8,  // 5: proto.CreateAuthZoneAuthRRsReq.authZone:type_name -> proto.AuthZone
	15, // 6: proto.CreateAuthZoneAuthRRsReq.auth_zone_rrs:type_name -> proto.AuthZoneRR
	8,  // 7: proto.UpdateAuthZoneAXFRReq.authZones:type_name -> proto.AuthZone
	15, // 8: proto.UpdateAuthZoneAXFRReq.auth_zone_rrs:type_name -> proto.AuthZoneRR
	15, // 9: proto.UpdateAuthZoneIXFRReq.old_auth_zone_rrs:type_name -> proto.AuthZoneRR
	15, // 10: proto.UpdateAuthZoneIXFRReq.new_auth_zone_rrs:type_name -> proto.AuthZoneRR
	15, // 11: proto.BatchCreateAuthRRsReq.auth_zone_rrs:type_name -> proto.AuthZoneRR
	15, // 12: proto.BatchCreateAuthRRsReq.soa:type_name -> proto.AuthZoneRR
	15, // 13: proto.CreateAuthRRReq.rr:type_name -> proto.AuthZoneRR
	15, // 14: proto.CreateAuthRRReq.soa:type_name -> proto.AuthZoneRR
	15, // 15: proto.UpdateAuthRRReq.old_rr:type_name -> proto.AuthZoneRR
	15, // 16: proto.UpdateAuthRRReq.new_rr:type_name -> proto.AuthZoneRR
	15, // 17: proto.UpdateAuthRRReq.soa:type_name -> proto.AuthZoneRR
	15, // 18: proto.DeleteAuthRRReq.rr:type_name -> proto.AuthZoneRR
	15, // 19: proto.DeleteAuthRRReq.soa:type_name -> proto.AuthZoneRR
	21, // 20: proto.CreateViewReq.view_priority:type_name -> proto.ViewPriority
	21, // 21: proto.UpdateViewReq.view_priority:type_name -> proto.ViewPriority
	21, // 22: proto.DeleteViewReq.view_priority:type_name -> proto.ViewPriority
	27, // 23: proto.CreateRedirectionReq.redirection:type_name -> proto.Redirection
	27, // 24: proto.UpdateRedirectionReq.old_redirection:type_name -> proto.Redirection
	27, // 25: proto.UpdateRedirectionReq.new_redirection:type_name -> proto.Redirection
	27, // 26: proto.DeleteRedirectionReq.redirection:type_name -> proto.Redirection
	36, // 27: proto.FlushForwardZoneReq.new_forward_zones:type_name -> proto.FlushForwardZoneReq.forwardZone
	36, // 28: proto.FlushForwardZoneReq.old_forward_zones:type_name -> proto.FlushForwardZoneReq.forwardZone
	0,  // 29: proto.AgentManager.StartDNS:input_type -> proto.DNSStartReq
	1,  // 30: proto.AgentManager.StopDNS:input_type -> proto.DNSStopReq
	4,  // 31: proto.AgentManager.CreateAcl:input_type -> proto.CreateAclReq
	6,  // 32: proto.AgentManager.UpdateAcl:input_type -> proto.UpdateAclReq
	7,  // 33: proto.AgentManager.DeleteAcl:input_type -> proto.DeleteAclReq
	5,  // 34: proto.AgentManager.BatchCreateAcl:input_type -> proto.BatchCreateAclReq
	20, // 35: proto.AgentManager.CreateView:input_type -> proto.CreateViewReq
	22, // 36: proto.AgentManager.UpdateView:input_type -> proto.UpdateViewReq
	23, // 37: proto.AgentManager.DeleteView:input_type -> proto.DeleteViewReq
	9,  // 38: proto.AgentManager.CreateAuthZone:input_type -> proto.CreateAuthZoneReq
	10, // 39: proto.AgentManager.UpdateAuthZone:input_type -> proto.UpdateAuthZoneReq
	11, // 40: proto.AgentManager.DeleteAuthZone:input_type -> proto.DeleteAuthZoneReq
	12, // 41: proto.AgentManager.CreateAuthZoneAuthRRs:input_type -> proto.CreateAuthZoneAuthRRsReq
	13, // 42: proto.AgentManager.UpdateAuthZoneAXFR:input_type -> proto.UpdateAuthZoneAXFRReq
	14, // 43: proto.AgentManager.UpdateAuthZoneIXFR:input_type -> proto.UpdateAuthZoneIXFRReq
	31, // 44: proto.AgentManager.CreateForwardZone:input_type -> proto.CreateForwardZoneReq
	32, // 45: proto.AgentManager.UpdateForwardZone:input_type -> proto.UpdateForwardZoneReq
	33, // 46: proto.AgentManager.DeleteForwardZone:input_type -> proto.DeleteForwardZoneReq
	34, // 47: proto.AgentManager.FlushForwardZone:input_type -> proto.FlushForwardZoneReq
	17, // 48: proto.AgentManager.CreateAuthRR:input_type -> proto.CreateAuthRRReq
	18, // 49: proto.AgentManager.UpdateAuthRR:input_type -> proto.UpdateAuthRRReq
	19, // 50: proto.AgentManager.DeleteAuthRR:input_type -> proto.DeleteAuthRRReq
	16, // 51: proto.AgentManager.BatchCreateAuthRRs:input_type -> proto.BatchCreateAuthRRsReq
	28, // 52: proto.AgentManager.CreateRedirection:input_type -> proto.CreateRedirectionReq
	29, // 53: proto.AgentManager.UpdateRedirection:input_type -> proto.UpdateRedirectionReq
	30, // 54: proto.AgentManager.DeleteRedirection:input_type -> proto.DeleteRedirectionReq
	24, // 55: proto.AgentManager.CreateUrlRedirect:input_type -> proto.CreateUrlRedirectReq
	25, // 56: proto.AgentManager.UpdateUrlRedirect:input_type -> proto.UpdateUrlRedirectReq
	26, // 57: proto.AgentManager.DeleteUrlRedirect:input_type -> proto.DeleteUrlRedirectReq
	2,  // 58: proto.AgentManager.UpdateGlobalConfig:input_type -> proto.UpdateGlobalConfigReq
	35, // 59: proto.AgentManager.UploadLog:input_type -> proto.UploadLogReq
	37, // 60: proto.AgentManager.StartDNS:output_type -> proto.DDIResponse
	37, // 61: proto.AgentManager.StopDNS:output_type -> proto.DDIResponse
	37, // 62: proto.AgentManager.CreateAcl:output_type -> proto.DDIResponse
	37, // 63: proto.AgentManager.UpdateAcl:output_type -> proto.DDIResponse
	37, // 64: proto.AgentManager.DeleteAcl:output_type -> proto.DDIResponse
	37, // 65: proto.AgentManager.BatchCreateAcl:output_type -> proto.DDIResponse
	37, // 66: proto.AgentManager.CreateView:output_type -> proto.DDIResponse
	37, // 67: proto.AgentManager.UpdateView:output_type -> proto.DDIResponse
	37, // 68: proto.AgentManager.DeleteView:output_type -> proto.DDIResponse
	37, // 69: proto.AgentManager.CreateAuthZone:output_type -> proto.DDIResponse
	37, // 70: proto.AgentManager.UpdateAuthZone:output_type -> proto.DDIResponse
	37, // 71: proto.AgentManager.DeleteAuthZone:output_type -> proto.DDIResponse
	37, // 72: proto.AgentManager.CreateAuthZoneAuthRRs:output_type -> proto.DDIResponse
	37, // 73: proto.AgentManager.UpdateAuthZoneAXFR:output_type -> proto.DDIResponse
	37, // 74: proto.AgentManager.UpdateAuthZoneIXFR:output_type -> proto.DDIResponse
	37, // 75: proto.AgentManager.CreateForwardZone:output_type -> proto.DDIResponse
	37, // 76: proto.AgentManager.UpdateForwardZone:output_type -> proto.DDIResponse
	37, // 77: proto.AgentManager.DeleteForwardZone:output_type -> proto.DDIResponse
	37, // 78: proto.AgentManager.FlushForwardZone:output_type -> proto.DDIResponse
	37, // 79: proto.AgentManager.CreateAuthRR:output_type -> proto.DDIResponse
	37, // 80: proto.AgentManager.UpdateAuthRR:output_type -> proto.DDIResponse
	37, // 81: proto.AgentManager.DeleteAuthRR:output_type -> proto.DDIResponse
	37, // 82: proto.AgentManager.BatchCreateAuthRRs:output_type -> proto.DDIResponse
	37, // 83: proto.AgentManager.CreateRedirection:output_type -> proto.DDIResponse
	37, // 84: proto.AgentManager.UpdateRedirection:output_type -> proto.DDIResponse
	37, // 85: proto.AgentManager.DeleteRedirection:output_type -> proto.DDIResponse
	37, // 86: proto.AgentManager.CreateUrlRedirect:output_type -> proto.DDIResponse
	37, // 87: proto.AgentManager.UpdateUrlRedirect:output_type -> proto.DDIResponse
	37, // 88: proto.AgentManager.DeleteUrlRedirect:output_type -> proto.DDIResponse
	37, // 89: proto.AgentManager.UpdateGlobalConfig:output_type -> proto.DDIResponse
	37, // 90: proto.AgentManager.UploadLog:output_type -> proto.DDIResponse
	60, // [60:91] is the sub-list for method output_type
	29, // [29:60] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_dns_proto_init() }
func file_dns_proto_init() {
	if File_dns_proto != nil {
		return
	}
	file_ddi_response_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dns_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNSStartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNSStopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGlobalConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Acl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAclReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateAclReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAclReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAclReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthZoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthZoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuthZoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthZoneAuthRRsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthZoneAXFRReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthZoneIXFRReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthZoneRR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateAuthRRsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthRRReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthRRReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuthRRReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewPriority); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUrlRedirectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUrlRedirectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUrlRedirectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Redirection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRedirectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRedirectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRedirectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateForwardZoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateForwardZoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteForwardZoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushForwardZoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dns_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushForwardZoneReqForwardZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dns_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dns_proto_goTypes,
		DependencyIndexes: file_dns_proto_depIdxs,
		MessageInfos:      file_dns_proto_msgTypes,
	}.Build()
	File_dns_proto = out.File
	file_dns_proto_rawDesc = nil
	file_dns_proto_goTypes = nil
	file_dns_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AgentManagerClient is the client API for AgentManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentManagerClient interface {
	StartDNS(ctx context.Context, in *DNSStartReq, opts ...grpc.CallOption) (*DDIResponse, error)
	StopDNS(ctx context.Context, in *DNSStopReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateAcl(ctx context.Context, in *CreateAclReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateAcl(ctx context.Context, in *UpdateAclReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteAcl(ctx context.Context, in *DeleteAclReq, opts ...grpc.CallOption) (*DDIResponse, error)
	BatchCreateAcl(ctx context.Context, in *BatchCreateAclReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateView(ctx context.Context, in *CreateViewReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateView(ctx context.Context, in *UpdateViewReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteView(ctx context.Context, in *DeleteViewReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateAuthZone(ctx context.Context, in *CreateAuthZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateAuthZone(ctx context.Context, in *UpdateAuthZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteAuthZone(ctx context.Context, in *DeleteAuthZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateAuthZoneAuthRRs(ctx context.Context, in *CreateAuthZoneAuthRRsReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateAuthZoneAXFR(ctx context.Context, in *UpdateAuthZoneAXFRReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateAuthZoneIXFR(ctx context.Context, in *UpdateAuthZoneIXFRReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateForwardZone(ctx context.Context, in *CreateForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateForwardZone(ctx context.Context, in *UpdateForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteForwardZone(ctx context.Context, in *DeleteForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	FlushForwardZone(ctx context.Context, in *FlushForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateAuthRR(ctx context.Context, in *CreateAuthRRReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateAuthRR(ctx context.Context, in *UpdateAuthRRReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteAuthRR(ctx context.Context, in *DeleteAuthRRReq, opts ...grpc.CallOption) (*DDIResponse, error)
	BatchCreateAuthRRs(ctx context.Context, in *BatchCreateAuthRRsReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateRedirection(ctx context.Context, in *CreateRedirectionReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateRedirection(ctx context.Context, in *UpdateRedirectionReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteRedirection(ctx context.Context, in *DeleteRedirectionReq, opts ...grpc.CallOption) (*DDIResponse, error)
	CreateUrlRedirect(ctx context.Context, in *CreateUrlRedirectReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateUrlRedirect(ctx context.Context, in *UpdateUrlRedirectReq, opts ...grpc.CallOption) (*DDIResponse, error)
	DeleteUrlRedirect(ctx context.Context, in *DeleteUrlRedirectReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UpdateGlobalConfig(ctx context.Context, in *UpdateGlobalConfigReq, opts ...grpc.CallOption) (*DDIResponse, error)
	UploadLog(ctx context.Context, in *UploadLogReq, opts ...grpc.CallOption) (*DDIResponse, error)
}

type agentManagerClient struct {
	cc grpc.ClientConnInterface
}

func NewAgentManagerClient(cc grpc.ClientConnInterface) AgentManagerClient {
	return &agentManagerClient{cc}
}

func (c *agentManagerClient) StartDNS(ctx context.Context, in *DNSStartReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/StartDNS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) StopDNS(ctx context.Context, in *DNSStopReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/StopDNS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateAcl(ctx context.Context, in *CreateAclReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateAcl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateAcl(ctx context.Context, in *UpdateAclReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateAcl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteAcl(ctx context.Context, in *DeleteAclReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteAcl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) BatchCreateAcl(ctx context.Context, in *BatchCreateAclReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/BatchCreateAcl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateView(ctx context.Context, in *CreateViewReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateView(ctx context.Context, in *UpdateViewReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteView(ctx context.Context, in *DeleteViewReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateAuthZone(ctx context.Context, in *CreateAuthZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateAuthZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateAuthZone(ctx context.Context, in *UpdateAuthZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateAuthZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteAuthZone(ctx context.Context, in *DeleteAuthZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteAuthZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateAuthZoneAuthRRs(ctx context.Context, in *CreateAuthZoneAuthRRsReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateAuthZoneAuthRRs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateAuthZoneAXFR(ctx context.Context, in *UpdateAuthZoneAXFRReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateAuthZoneAXFR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateAuthZoneIXFR(ctx context.Context, in *UpdateAuthZoneIXFRReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateAuthZoneIXFR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateForwardZone(ctx context.Context, in *CreateForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateForwardZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateForwardZone(ctx context.Context, in *UpdateForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateForwardZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteForwardZone(ctx context.Context, in *DeleteForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteForwardZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) FlushForwardZone(ctx context.Context, in *FlushForwardZoneReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/FlushForwardZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateAuthRR(ctx context.Context, in *CreateAuthRRReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateAuthRR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateAuthRR(ctx context.Context, in *UpdateAuthRRReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateAuthRR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteAuthRR(ctx context.Context, in *DeleteAuthRRReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteAuthRR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) BatchCreateAuthRRs(ctx context.Context, in *BatchCreateAuthRRsReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/BatchCreateAuthRRs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateRedirection(ctx context.Context, in *CreateRedirectionReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateRedirection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateRedirection(ctx context.Context, in *UpdateRedirectionReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateRedirection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteRedirection(ctx context.Context, in *DeleteRedirectionReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteRedirection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateUrlRedirect(ctx context.Context, in *CreateUrlRedirectReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/CreateUrlRedirect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateUrlRedirect(ctx context.Context, in *UpdateUrlRedirectReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateUrlRedirect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteUrlRedirect(ctx context.Context, in *DeleteUrlRedirectReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/DeleteUrlRedirect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateGlobalConfig(ctx context.Context, in *UpdateGlobalConfigReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UpdateGlobalConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UploadLog(ctx context.Context, in *UploadLogReq, opts ...grpc.CallOption) (*DDIResponse, error) {
	out := new(DDIResponse)
	err := c.cc.Invoke(ctx, "/proto.AgentManager/UploadLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AgentManagerServer is the server API for AgentManager service.
type AgentManagerServer interface {
	StartDNS(context.Context, *DNSStartReq) (*DDIResponse, error)
	StopDNS(context.Context, *DNSStopReq) (*DDIResponse, error)
	CreateAcl(context.Context, *CreateAclReq) (*DDIResponse, error)
	UpdateAcl(context.Context, *UpdateAclReq) (*DDIResponse, error)
	DeleteAcl(context.Context, *DeleteAclReq) (*DDIResponse, error)
	BatchCreateAcl(context.Context, *BatchCreateAclReq) (*DDIResponse, error)
	CreateView(context.Context, *CreateViewReq) (*DDIResponse, error)
	UpdateView(context.Context, *UpdateViewReq) (*DDIResponse, error)
	DeleteView(context.Context, *DeleteViewReq) (*DDIResponse, error)
	CreateAuthZone(context.Context, *CreateAuthZoneReq) (*DDIResponse, error)
	UpdateAuthZone(context.Context, *UpdateAuthZoneReq) (*DDIResponse, error)
	DeleteAuthZone(context.Context, *DeleteAuthZoneReq) (*DDIResponse, error)
	CreateAuthZoneAuthRRs(context.Context, *CreateAuthZoneAuthRRsReq) (*DDIResponse, error)
	UpdateAuthZoneAXFR(context.Context, *UpdateAuthZoneAXFRReq) (*DDIResponse, error)
	UpdateAuthZoneIXFR(context.Context, *UpdateAuthZoneIXFRReq) (*DDIResponse, error)
	CreateForwardZone(context.Context, *CreateForwardZoneReq) (*DDIResponse, error)
	UpdateForwardZone(context.Context, *UpdateForwardZoneReq) (*DDIResponse, error)
	DeleteForwardZone(context.Context, *DeleteForwardZoneReq) (*DDIResponse, error)
	FlushForwardZone(context.Context, *FlushForwardZoneReq) (*DDIResponse, error)
	CreateAuthRR(context.Context, *CreateAuthRRReq) (*DDIResponse, error)
	UpdateAuthRR(context.Context, *UpdateAuthRRReq) (*DDIResponse, error)
	DeleteAuthRR(context.Context, *DeleteAuthRRReq) (*DDIResponse, error)
	BatchCreateAuthRRs(context.Context, *BatchCreateAuthRRsReq) (*DDIResponse, error)
	CreateRedirection(context.Context, *CreateRedirectionReq) (*DDIResponse, error)
	UpdateRedirection(context.Context, *UpdateRedirectionReq) (*DDIResponse, error)
	DeleteRedirection(context.Context, *DeleteRedirectionReq) (*DDIResponse, error)
	CreateUrlRedirect(context.Context, *CreateUrlRedirectReq) (*DDIResponse, error)
	UpdateUrlRedirect(context.Context, *UpdateUrlRedirectReq) (*DDIResponse, error)
	DeleteUrlRedirect(context.Context, *DeleteUrlRedirectReq) (*DDIResponse, error)
	UpdateGlobalConfig(context.Context, *UpdateGlobalConfigReq) (*DDIResponse, error)
	UploadLog(context.Context, *UploadLogReq) (*DDIResponse, error)
}

// UnimplementedAgentManagerServer can be embedded to have forward compatible implementations.
type UnimplementedAgentManagerServer struct {
}

func (*UnimplementedAgentManagerServer) StartDNS(context.Context, *DNSStartReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartDNS not implemented")
}
func (*UnimplementedAgentManagerServer) StopDNS(context.Context, *DNSStopReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopDNS not implemented")
}
func (*UnimplementedAgentManagerServer) CreateAcl(context.Context, *CreateAclReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAcl not implemented")
}
func (*UnimplementedAgentManagerServer) UpdateAcl(context.Context, *UpdateAclReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAcl not implemented")
}
func (*UnimplementedAgentManagerServer) DeleteAcl(context.Context, *DeleteAclReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAcl not implemented")
}
func (*UnimplementedAgentManagerServer) BatchCreateAcl(context.Context, *BatchCreateAclReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchCreateAcl not implemented")
}
func (*UnimplementedAgentManagerServer) CreateView(context.Context, *CreateViewReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateView not implemented")
}
func (*UnimplementedAgentManagerServer) UpdateView(context.Context, *UpdateViewReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateView not implemented")
}
func (*UnimplementedAgentManagerServer) DeleteView(context.Context, *DeleteViewReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteView not implemented")
}
func (*UnimplementedAgentManagerServer) CreateAuthZone(context.Context, *CreateAuthZoneReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAuthZone not implemented")
}
func (*UnimplementedAgentManagerServer) UpdateAuthZone(context.Context, *UpdateAuthZoneReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuthZone not implemented")
}
func (*UnimplementedAgentManagerServer) DeleteAuthZone(context.Context, *DeleteAuthZoneReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAuthZone not implemented")
}
func (*UnimplementedAgentManagerServer) CreateAuthZoneAuthRRs(context.Context, *CreateAuthZoneAuthRRsReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAuthZoneAuthRRs not implemented")
}
func (*UnimplementedAgentManagerServer) UpdateAuthZoneAXFR(context.Context, *UpdateAuthZoneAXFRReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuthZoneAXFR not implemented")
}
func (*UnimplementedAgentManagerServer) UpdateAuthZoneIXFR(context.Context, *UpdateAuthZoneIXFRReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuthZoneIXFR not implemented")
}
func (*UnimplementedAgentManagerServer) CreateForwardZone(context.Context, *CreateForwardZoneReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateForwardZone not implemented")
}
func (*UnimplementedAgentManagerServer) UpdateForwardZone(context.Context, *UpdateForwardZoneReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateForwardZone not implemented")
}
func (*UnimplementedAgentManagerServer) DeleteForwardZone(context.Context, *DeleteForwardZoneReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteForwardZone not implemented")
}
func (*UnimplementedAgentManagerServer) FlushForwardZone(context.Context, *FlushForwardZoneReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FlushForwardZone not implemented")
}
func (*UnimplementedAgentManagerServer) CreateAuthRR(context.Context, *CreateAuthRRReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAuthRR not implemented")
}
func (*UnimplementedAgentManagerServer) UpdateAuthRR(context.Context, *UpdateAuthRRReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuthRR not implemented")
}
func (*UnimplementedAgentManagerServer) DeleteAuthRR(context.Context, *DeleteAuthRRReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAuthRR not implemented")
}
func (*UnimplementedAgentManagerServer) BatchCreateAuthRRs(context.Context, *BatchCreateAuthRRsReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchCreateAuthRRs not implemented")
}
func (*UnimplementedAgentManagerServer) CreateRedirection(context.Context, *CreateRedirectionReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRedirection not implemented")
}
func (*UnimplementedAgentManagerServer) UpdateRedirection(context.Context, *UpdateRedirectionReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRedirection not implemented")
}
func (*UnimplementedAgentManagerServer) DeleteRedirection(context.Context, *DeleteRedirectionReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRedirection not implemented")
}
func (*UnimplementedAgentManagerServer) CreateUrlRedirect(context.Context, *CreateUrlRedirectReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUrlRedirect not implemented")
}
func (*UnimplementedAgentManagerServer) UpdateUrlRedirect(context.Context, *UpdateUrlRedirectReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUrlRedirect not implemented")
}
func (*UnimplementedAgentManagerServer) DeleteUrlRedirect(context.Context, *DeleteUrlRedirectReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUrlRedirect not implemented")
}
func (*UnimplementedAgentManagerServer) UpdateGlobalConfig(context.Context, *UpdateGlobalConfigReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGlobalConfig not implemented")
}
func (*UnimplementedAgentManagerServer) UploadLog(context.Context, *UploadLogReq) (*DDIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadLog not implemented")
}

func RegisterAgentManagerServer(s *grpc.Server, srv AgentManagerServer) {
	s.RegisterService(&_AgentManager_serviceDesc, srv)
}

func _AgentManager_StartDNS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DNSStartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).StartDNS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/StartDNS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).StartDNS(ctx, req.(*DNSStartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_StopDNS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DNSStopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).StopDNS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/StopDNS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).StopDNS(ctx, req.(*DNSStopReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateAcl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAclReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateAcl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateAcl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateAcl(ctx, req.(*CreateAclReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateAcl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAclReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateAcl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateAcl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateAcl(ctx, req.(*UpdateAclReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteAcl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAclReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteAcl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteAcl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteAcl(ctx, req.(*DeleteAclReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_BatchCreateAcl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchCreateAclReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).BatchCreateAcl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/BatchCreateAcl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).BatchCreateAcl(ctx, req.(*BatchCreateAclReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateView(ctx, req.(*CreateViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateView(ctx, req.(*UpdateViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteView(ctx, req.(*DeleteViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateAuthZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAuthZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateAuthZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateAuthZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateAuthZone(ctx, req.(*CreateAuthZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateAuthZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuthZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateAuthZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateAuthZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateAuthZone(ctx, req.(*UpdateAuthZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteAuthZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAuthZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteAuthZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteAuthZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteAuthZone(ctx, req.(*DeleteAuthZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateAuthZoneAuthRRs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAuthZoneAuthRRsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateAuthZoneAuthRRs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateAuthZoneAuthRRs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateAuthZoneAuthRRs(ctx, req.(*CreateAuthZoneAuthRRsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateAuthZoneAXFR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuthZoneAXFRReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateAuthZoneAXFR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateAuthZoneAXFR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateAuthZoneAXFR(ctx, req.(*UpdateAuthZoneAXFRReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateAuthZoneIXFR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuthZoneIXFRReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateAuthZoneIXFR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateAuthZoneIXFR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateAuthZoneIXFR(ctx, req.(*UpdateAuthZoneIXFRReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateForwardZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateForwardZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateForwardZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateForwardZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateForwardZone(ctx, req.(*CreateForwardZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateForwardZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateForwardZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateForwardZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateForwardZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateForwardZone(ctx, req.(*UpdateForwardZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteForwardZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteForwardZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteForwardZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteForwardZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteForwardZone(ctx, req.(*DeleteForwardZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_FlushForwardZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlushForwardZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).FlushForwardZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/FlushForwardZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).FlushForwardZone(ctx, req.(*FlushForwardZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateAuthRR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAuthRRReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateAuthRR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateAuthRR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateAuthRR(ctx, req.(*CreateAuthRRReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateAuthRR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuthRRReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateAuthRR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateAuthRR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateAuthRR(ctx, req.(*UpdateAuthRRReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteAuthRR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAuthRRReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteAuthRR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteAuthRR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteAuthRR(ctx, req.(*DeleteAuthRRReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_BatchCreateAuthRRs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchCreateAuthRRsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).BatchCreateAuthRRs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/BatchCreateAuthRRs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).BatchCreateAuthRRs(ctx, req.(*BatchCreateAuthRRsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateRedirection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRedirectionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateRedirection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateRedirection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateRedirection(ctx, req.(*CreateRedirectionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateRedirection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRedirectionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateRedirection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateRedirection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateRedirection(ctx, req.(*UpdateRedirectionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteRedirection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRedirectionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteRedirection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteRedirection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteRedirection(ctx, req.(*DeleteRedirectionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateUrlRedirect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUrlRedirectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateUrlRedirect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/CreateUrlRedirect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateUrlRedirect(ctx, req.(*CreateUrlRedirectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateUrlRedirect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUrlRedirectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateUrlRedirect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateUrlRedirect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateUrlRedirect(ctx, req.(*UpdateUrlRedirectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteUrlRedirect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUrlRedirectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteUrlRedirect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/DeleteUrlRedirect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteUrlRedirect(ctx, req.(*DeleteUrlRedirectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateGlobalConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGlobalConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateGlobalConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UpdateGlobalConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateGlobalConfig(ctx, req.(*UpdateGlobalConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UploadLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadLogReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UploadLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentManager/UploadLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UploadLog(ctx, req.(*UploadLogReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AgentManager",
	HandlerType: (*AgentManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartDNS",
			Handler:    _AgentManager_StartDNS_Handler,
		},
		{
			MethodName: "StopDNS",
			Handler:    _AgentManager_StopDNS_Handler,
		},
		{
			MethodName: "CreateAcl",
			Handler:    _AgentManager_CreateAcl_Handler,
		},
		{
			MethodName: "UpdateAcl",
			Handler:    _AgentManager_UpdateAcl_Handler,
		},
		{
			MethodName: "DeleteAcl",
			Handler:    _AgentManager_DeleteAcl_Handler,
		},
		{
			MethodName: "BatchCreateAcl",
			Handler:    _AgentManager_BatchCreateAcl_Handler,
		},
		{
			MethodName: "CreateView",
			Handler:    _AgentManager_CreateView_Handler,
		},
		{
			MethodName: "UpdateView",
			Handler:    _AgentManager_UpdateView_Handler,
		},
		{
			MethodName: "DeleteView",
			Handler:    _AgentManager_DeleteView_Handler,
		},
		{
			MethodName: "CreateAuthZone",
			Handler:    _AgentManager_CreateAuthZone_Handler,
		},
		{
			MethodName: "UpdateAuthZone",
			Handler:    _AgentManager_UpdateAuthZone_Handler,
		},
		{
			MethodName: "DeleteAuthZone",
			Handler:    _AgentManager_DeleteAuthZone_Handler,
		},
		{
			MethodName: "CreateAuthZoneAuthRRs",
			Handler:    _AgentManager_CreateAuthZoneAuthRRs_Handler,
		},
		{
			MethodName: "UpdateAuthZoneAXFR",
			Handler:    _AgentManager_UpdateAuthZoneAXFR_Handler,
		},
		{
			MethodName: "UpdateAuthZoneIXFR",
			Handler:    _AgentManager_UpdateAuthZoneIXFR_Handler,
		},
		{
			MethodName: "CreateForwardZone",
			Handler:    _AgentManager_CreateForwardZone_Handler,
		},
		{
			MethodName: "UpdateForwardZone",
			Handler:    _AgentManager_UpdateForwardZone_Handler,
		},
		{
			MethodName: "DeleteForwardZone",
			Handler:    _AgentManager_DeleteForwardZone_Handler,
		},
		{
			MethodName: "FlushForwardZone",
			Handler:    _AgentManager_FlushForwardZone_Handler,
		},
		{
			MethodName: "CreateAuthRR",
			Handler:    _AgentManager_CreateAuthRR_Handler,
		},
		{
			MethodName: "UpdateAuthRR",
			Handler:    _AgentManager_UpdateAuthRR_Handler,
		},
		{
			MethodName: "DeleteAuthRR",
			Handler:    _AgentManager_DeleteAuthRR_Handler,
		},
		{
			MethodName: "BatchCreateAuthRRs",
			Handler:    _AgentManager_BatchCreateAuthRRs_Handler,
		},
		{
			MethodName: "CreateRedirection",
			Handler:    _AgentManager_CreateRedirection_Handler,
		},
		{
			MethodName: "UpdateRedirection",
			Handler:    _AgentManager_UpdateRedirection_Handler,
		},
		{
			MethodName: "DeleteRedirection",
			Handler:    _AgentManager_DeleteRedirection_Handler,
		},
		{
			MethodName: "CreateUrlRedirect",
			Handler:    _AgentManager_CreateUrlRedirect_Handler,
		},
		{
			MethodName: "UpdateUrlRedirect",
			Handler:    _AgentManager_UpdateUrlRedirect_Handler,
		},
		{
			MethodName: "DeleteUrlRedirect",
			Handler:    _AgentManager_DeleteUrlRedirect_Handler,
		},
		{
			MethodName: "UpdateGlobalConfig",
			Handler:    _AgentManager_UpdateGlobalConfig_Handler,
		},
		{
			MethodName: "UploadLog",
			Handler:    _AgentManager_UploadLog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dns.proto",
}
