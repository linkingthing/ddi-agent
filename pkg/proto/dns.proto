syntax = "proto3";

package proto;
import "ddi_response.proto";

service AgentManager{
	rpc StartDNS(DNSStartReq) returns (DDIResponse){}
	rpc StopDNS(DNSStopReq) returns (DDIResponse){}

	rpc CreateAcl(CreateAclReq) returns (DDIResponse){}
	rpc UpdateAcl(UpdateAclReq) returns (DDIResponse){}
	rpc DeleteAcl(DeleteAclReq) returns (DDIResponse){}
	rpc BatchCreateAcl(BatchCreateAclReq) returns (DDIResponse){}

	rpc CreateView(CreateViewReq) returns (DDIResponse){}
	rpc UpdateView(UpdateViewReq) returns (DDIResponse){}
	rpc DeleteView(DeleteViewReq) returns (DDIResponse){}

	rpc CreateAuthZone(CreateAuthZoneReq) returns (DDIResponse){}
	rpc UpdateAuthZone(UpdateAuthZoneReq) returns (DDIResponse){}
	rpc DeleteAuthZone(DeleteAuthZoneReq) returns (DDIResponse){}
	rpc CreateAuthZoneAuthRRs(CreateAuthZoneAuthRRsReq) returns (DDIResponse){}
	rpc UpdateAuthZoneAXFR(UpdateAuthZoneAXFRReq) returns (DDIResponse){}
	rpc UpdateAuthZoneIXFR(UpdateAuthZoneIXFRReq) returns (DDIResponse){}

	rpc CreateForwardZone(CreateForwardZoneReq) returns (DDIResponse){}
	rpc UpdateForwardZone(UpdateForwardZoneReq) returns (DDIResponse){}
	rpc DeleteForwardZone(DeleteForwardZoneReq) returns (DDIResponse){}
	rpc FlushForwardZone(FlushForwardZoneReq) returns (DDIResponse){}

	rpc CreateAuthRR(CreateAuthRRReq) returns (DDIResponse){}
	rpc UpdateAuthRR(UpdateAuthRRReq) returns (DDIResponse){}
	rpc DeleteAuthRR(DeleteAuthRRReq) returns (DDIResponse){}
	rpc BatchCreateAuthRRs(BatchCreateAuthRRsReq) returns (DDIResponse){}

	rpc CreateRedirection(CreateRedirectionReq) returns (DDIResponse){}
	rpc UpdateRedirection(UpdateRedirectionReq) returns (DDIResponse){}
	rpc DeleteRedirection(DeleteRedirectionReq) returns (DDIResponse){}

	rpc CreateUrlRedirect(CreateUrlRedirectReq) returns (DDIResponse){}
	rpc UpdateUrlRedirect(UpdateUrlRedirectReq) returns (DDIResponse){}
	rpc DeleteUrlRedirect(DeleteUrlRedirectReq) returns (DDIResponse){}

	rpc UpdateGlobalConfig(UpdateGlobalConfigReq) returns (DDIResponse){}

	rpc UploadLog(UploadLogReq) returns (DDIResponse){}
}

message DNSStartReq{
	string config = 1;
}

message DNSStopReq{}

message UpdateGlobalConfigReq{
	bool log_enable = 1;
	bool dnssec_enable = 2;
	uint32 ttl = 3;
	bool blackhole_enable = 4;
	repeated string blackholes = 5;
	bool recursion_enable = 6;
	uint32 recursive_clients = 7;
	uint32 transfer_port = 8;
	string update_model = 9;
}

message Acl{
	string id = 1;
	string name = 2;
	repeated string ips = 3;
}

message CreateAclReq{
	Acl acl =1;
}

message BatchCreateAclReq{
	repeated Acl acls =1;
}

message UpdateAclReq{
	Acl acl =1;
}

message DeleteAclReq{
	string id = 1;
}

message AuthZone {
	string view = 1;
	string name = 2;
	uint32 ttl = 3;
	string role = 4;
	repeated string masters = 5;
	repeated string slaves = 6;
}

message CreateAuthZoneReq{
		AuthZone authZone = 1;
}

message UpdateAuthZoneReq{
	AuthZone authZone = 1;
}

message DeleteAuthZoneReq{
	string view = 1;
	string name = 2;
}

message CreateAuthZoneAuthRRsReq{
	AuthZone authZone = 1;
	repeated AuthZoneRR auth_zone_rrs = 2;
}

message UpdateAuthZoneAXFRReq{
	repeated AuthZone authZones = 1;
	repeated AuthZoneRR auth_zone_rrs = 2;
}

message UpdateAuthZoneIXFRReq{
	repeated AuthZoneRR old_auth_zone_rrs = 1;
	repeated AuthZoneRR new_auth_zone_rrs = 2;
	repeated AuthZoneRR soas = 3;
}

message AuthZoneRR{
    string view = 1;
    string zone = 2;
    string name = 3;
    string type = 4;
    uint32 ttl = 5;
    string rdata = 6;
	  string view_key = 7;
}

message BatchCreateAuthRRsReq{
	repeated AuthZoneRR auth_zone_rrs = 1;
	AuthZoneRR soa = 2;
}

message CreateAuthRRReq{
	AuthZoneRR rr = 1;
	AuthZoneRR soa = 2;
}

message UpdateAuthRRReq{
	AuthZoneRR old_rr = 1;
	AuthZoneRR new_rr = 2;
	AuthZoneRR soa = 3;
}

message DeleteAuthRRReq{
	AuthZoneRR rr = 1;
	AuthZoneRR soa = 2;
}

message CreateViewReq{
	string id = 1;
	string name = 2;
	uint32 priority = 3;
	string dns64 = 4;
	string key = 5;
	repeated string acls = 6;
	bool recursion = 7;
	repeated ViewPriority view_priority = 8;
}

message ViewPriority{
	string id = 1;
	uint32 priority = 2;
}

message UpdateViewReq{
	string id = 1;
	uint32 priority = 2;
	string dns64 = 3;
	repeated string acls = 4;
	bool recursion = 5;
	repeated ViewPriority view_priority = 6;
}

message DeleteViewReq{
	string id = 1;
	repeated ViewPriority view_priority = 2;
}

message CreateUrlRedirectReq{
	string domain = 1;
	string url = 2;
	bool is_https = 3;
	bytes key = 4;
	bytes crt = 5;
}

message UpdateUrlRedirectReq{
	string domain = 1;
	string url = 2;
	bool is_https = 3;
}

message DeleteUrlRedirectReq{
	string domain = 1;
	bool is_https = 2;
}

message Redirection{
	string view = 1;
	string name = 2;
	string rr_type = 3;
	uint32 ttl = 4;
	string rdata = 5;
	string redirect_type = 6;
}

message CreateRedirectionReq{
    Redirection redirection = 1;
}

message UpdateRedirectionReq{
    Redirection old_redirection = 1;
    Redirection new_redirection = 2;
}

message DeleteRedirectionReq{
    Redirection redirection = 1;
}

message CreateForwardZoneReq{
	string view = 1;
	string name = 2;
	string forward_style = 3;
	repeated string addresses = 4;
}

message UpdateForwardZoneReq{
	string view = 1;
	string name = 2;
	string forward_style= 3;
	repeated string addresses = 4;
}

message DeleteForwardZoneReq{
	string view = 1;
	string name = 2;
}

message FlushForwardZoneReq {
    message forwardZone{
        string view = 1;
        string name = 2;
        string forward_style= 3;
        repeated string forward_ips = 4;
    }

    repeated forwardZone new_forward_zones = 1;
    repeated forwardZone old_forward_zones = 2;
}

message UploadLogReq{
	string id = 1;
	string user = 2;
	string password = 3;
	string address = 4;
	string master_node_ip = 5;
}
